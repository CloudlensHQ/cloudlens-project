"""Initial migration

Revision ID: f62d80e1f43d
Revises: 
Create Date: 2025-07-27 06:11:14.848730

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f62d80e1f43d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('cloud_provider', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenant',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('tenant_metadata', sa.JSON(), nullable=True),
    sa.Column('name', sa.JSON(), nullable=True),
    sa.Column('email', sa.JSON(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cloud_scan',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('cloud_scan_metadata', sa.JSON(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('cloud_provider', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('onboarding_completed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('reset_password_token', sa.String(length=255), nullable=True),
    sa.Column('reset_password_expires', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_reset_password_token'), 'users', ['reset_password_token'], unique=False)
    op.create_table('service_scan_result',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scan_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('service_name', sa.Text(), nullable=True),
    sa.Column('scan_result_metadata', sa.JSON(), nullable=True),
    sa.Column('service_scan_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('region', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['scan_id'], ['cloud_scan.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('service_scan_result')
    op.drop_index(op.f('ix_users_reset_password_token'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('cloud_scan')
    op.drop_table('tenant')
    op.drop_table('regions')
    # ### end Alembic commands ### 