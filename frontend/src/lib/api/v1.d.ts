/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/management/api-keys/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Api Token By Organization
         * @description Get API key by organization
         */
        get: operations["get_api_token_by_organization_management_api_keys_token_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/management/api-keys/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Api Key
         * @description Retrieve an API key
         */
        get: operations["get_api_key_management_api_keys__id__get"];
        put?: never;
        post?: never;
        /**
         * Delete Api Key
         * @description Delete an API key
         */
        delete: operations["delete_api_key_management_api_keys__id__delete"];
        options?: never;
        head?: never;
        /**
         * Partial Update Api Key
         * @description Update an API key
         */
        patch: operations["partial_update_api_key_management_api_keys__id__patch"];
        trace?: never;
    };
    "/management/api-keys": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Api Key
         * @description Create an API key
         */
        post: operations["create_api_key_management_api_keys_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/platforms/announcement/{announcement_id}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Announcement Status */
        patch: operations["update_announcement_status_users_platforms_announcement__announcement_id__status_patch"];
        trace?: never;
    };
    "/users/platforms/onboarding-flow/{flow_id}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Onboarding Flow Status */
        patch: operations["update_onboarding_flow_status_users_platforms_onboarding_flow__flow_id__status_patch"];
        trace?: never;
    };
    "/users/platforms/onboarding-flow/get_selected_flow": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Selected Onboarding Flow From Template Onboarding Flow Id */
        get: operations["get_selected_onboarding_flow_from_template_onboarding_flow_id_users_platforms_onboarding_flow_get_selected_flow_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/platforms/initialize-data": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Initialize Platform User Data */
        post: operations["initialize_platform_user_data_users_platforms_initialize_data_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/platforms/onboarding-plan": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Platform User Onboarding Plan
         * @description Get the onboarding plan for a platform user
         */
        get: operations["get_platform_user_onboarding_plan_users_platforms_onboarding_plan_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/platforms/announcements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Platform User Announcements
         * @description Get announcements for a platform user
         */
        get: operations["get_platform_user_announcements_users_platforms_announcements_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/platforms/{platform_id}/query-history/feedback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Submit Feedback */
        post: operations["submit_feedback_users_platforms__platform_id__query_history_feedback_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/platforms/{platform_id}/query-history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Query History */
        get: operations["get_query_history_users_platforms__platform_id__query_history_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/platforms/{platform_id}/query-history/{query_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Query By User Id */
        delete: operations["delete_query_by_user_id_users_platforms__platform_id__query_history__query_id__delete"];
        options?: never;
        head?: never;
        /** Update Query */
        patch: operations["update_query_users_platforms__platform_id__query_history__query_id__patch"];
        trace?: never;
    };
    "/users/platforms/{platform_id}/query-history/run/{query_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Run Query */
        post: operations["run_query_users_platforms__platform_id__query_history_run__query_id__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/platforms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Platforms */
        get: operations["get_platforms_users_platforms_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/platforms/{platform_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Partial Update Platform
         * @description Update a platform for the user
         */
        patch: operations["partial_update_platform_users_platforms__platform_id__patch"];
        trace?: never;
    };
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Me */
        get: operations["me_users_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/webhooks/keycloak/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Handle Keycloak User Event
         * @description Handle Keycloak user events
         */
        post: operations["handle_keycloak_user_event_webhooks_keycloak_user_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/webhooks/workos/organization": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Handle Organization Webhook
         * @description Handle WorkOS organization-related webhook events
         */
        post: operations["handle_organization_webhook_webhooks_workos_organization_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/webhooks/firecrawl/job/{webhook_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Handle Firecrawl Job Event
         * @description Handle Firecrawl crawl events and extract metadata and markdown content
         */
        post: operations["handle_firecrawl_job_event_webhooks_firecrawl_job__webhook_id__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/emails": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Send Keycloak Email */
        post: operations["send_keycloak_email_emails_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/permissions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Check Permissions */
        post: operations["check_permissions_automation_permissions_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/guidance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Guidance */
        post: operations["create_guidance_automation_guidance_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/guidance/v3": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Guidance V3 */
        post: operations["create_guidance_v3_automation_guidance_v3_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/announcements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Announcements
         * @description List announcements for a platform
         */
        get: operations["get_announcements_automation_platforms__platform_id__announcements_get"];
        put?: never;
        /** Create Announcement */
        post: operations["create_announcement_automation_platforms__platform_id__announcements_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/announcements/{announcement_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Announcement */
        get: operations["get_announcement_automation_platforms__platform_id__announcements__announcement_id__get"];
        put?: never;
        post?: never;
        /** Delete Announcement */
        delete: operations["delete_announcement_automation_platforms__platform_id__announcements__announcement_id__delete"];
        options?: never;
        head?: never;
        /** Update Announcement */
        patch: operations["update_announcement_automation_platforms__platform_id__announcements__announcement_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/announcements/from-template": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Announcement From Template For Platform User */
        post: operations["create_announcement_from_template_for_platform_user_automation_platforms__platform_id__announcements_from_template_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/guidance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Platform Guidance */
        post: operations["create_platform_guidance_automation_platforms_guidance_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/guidance/v3": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Platform Guidance */
        post: operations["create_platform_guidance_automation_platforms_guidance_v3_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/guidance-flows/{guidance_flow_id}/steps/{guidance_step_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update Guidance Step
         * @description Update the guidance flow
         */
        patch: operations["update_guidance_step_automation_platforms__platform_id__guidance_flows__guidance_flow_id__steps__guidance_step_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/guidance-flows": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Guidance Flows
         * @description List guidance flows
         */
        get: operations["get_guidance_flows_automation_platforms__platform_id__guidance_flows_get"];
        put?: never;
        /**
         * Create Guidance Flow
         * @description Create a guidance flow
         */
        post: operations["create_guidance_flow_automation_platforms__platform_id__guidance_flows_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/guidance-flows/{guidance_flow_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Guidance Flow By Id
         * @description Get guidance flow
         */
        get: operations["get_guidance_flow_by_id_automation_platforms__platform_id__guidance_flows__guidance_flow_id__get"];
        put?: never;
        post?: never;
        /**
         * Delete Guidance Flow
         * @description Delete guidance flow
         */
        delete: operations["delete_guidance_flow_automation_platforms__platform_id__guidance_flows__guidance_flow_id__delete"];
        options?: never;
        head?: never;
        /**
         * Update Guidance Flow
         * @description Update the guidance flow
         */
        patch: operations["update_guidance_flow_automation_platforms__platform_id__guidance_flows__guidance_flow_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/guidance-flows/from-recording": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Guidance Flow From Recording */
        post: operations["create_guidance_flow_from_recording_automation_platforms__platform_id__guidance_flows_from_recording_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/guidance-flows/from-agent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Guidance Flow From Agent */
        post: operations["create_guidance_flow_from_agent_automation_platforms__platform_id__guidance_flows_from_agent_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/guidance-flows/agent/start": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Trigger Guidance Flow Load */
        post: operations["trigger_guidance_flow_load_automation_platforms__platform_id__guidance_flows_agent_start_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/onboarding/flows": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Onboarding Flows */
        get: operations["get_onboarding_flows_automation_platforms__platform_id__onboarding_flows_get"];
        put?: never;
        /** Create Onboarding Flow */
        post: operations["create_onboarding_flow_automation_platforms__platform_id__onboarding_flows_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/onboarding/flows/{onboarding_flow_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Onboarding Flow */
        delete: operations["delete_onboarding_flow_automation_platforms__platform_id__onboarding_flows__onboarding_flow_id__delete"];
        options?: never;
        head?: never;
        /** Update Onboarding Flow */
        patch: operations["update_onboarding_flow_automation_platforms__platform_id__onboarding_flows__onboarding_flow_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/onboarding/plans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Onboarding Plans */
        get: operations["get_onboarding_plans_automation_platforms__platform_id__onboarding_plans_get"];
        put?: never;
        /** Create Onboarding Plan */
        post: operations["create_onboarding_plan_automation_platforms__platform_id__onboarding_plans_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/onboarding/plans/{onboarding_plan_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Onboarding Plan
         * @description Get an onboarding plan
         */
        get: operations["get_onboarding_plan_automation_platforms__platform_id__onboarding_plans__onboarding_plan_id__get"];
        put?: never;
        post?: never;
        /** Delete Onboarding Plan */
        delete: operations["delete_onboarding_plan_automation_platforms__platform_id__onboarding_plans__onboarding_plan_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/onboarding/plans/{plan_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Onboarding Plan */
        patch: operations["update_onboarding_plan_automation_platforms__platform_id__onboarding_plans__plan_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/onboarding/plans/from-template": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Onboarding Plan From Template For Platform User */
        post: operations["create_onboarding_plan_from_template_for_platform_user_automation_platforms__platform_id__onboarding_plans_from_template_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/queries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Filter Queries */
        get: operations["filter_queries_automation_platforms__platform_id__queries_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/queries/top": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Top Queries */
        get: operations["get_top_queries_automation_platforms__platform_id__queries_top_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/queries/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Query Stats */
        get: operations["get_query_stats_automation_platforms__platform_id__queries_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/queries/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Query */
        get: operations["get_query_automation_platforms__platform_id__queries__id__get"];
        put?: never;
        post?: never;
        /** Delete Query */
        delete: operations["delete_query_automation_platforms__platform_id__queries__id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/template-announcements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Template Announcements */
        get: operations["get_template_announcements_automation_platforms__platform_id__template_announcements_get"];
        put?: never;
        /** Create Template Announcement */
        post: operations["create_template_announcement_automation_platforms__platform_id__template_announcements_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/template-announcements/{template_announcement_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Template Announcement */
        get: operations["get_template_announcement_automation_platforms__platform_id__template_announcements__template_announcement_id__get"];
        put?: never;
        post?: never;
        /** Delete Template Announcement */
        delete: operations["delete_template_announcement_automation_platforms__platform_id__template_announcements__template_announcement_id__delete"];
        options?: never;
        head?: never;
        /** Update Template Announcement */
        patch: operations["update_template_announcement_automation_platforms__platform_id__template_announcements__template_announcement_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/template-announcements/{template_announcement_id}/stage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Template Announcement Stage */
        patch: operations["update_template_announcement_stage_automation_platforms__platform_id__template_announcements__template_announcement_id__stage_patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/template-onboarding/plans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Template Onboarding Plans */
        get: operations["get_template_onboarding_plans_automation_platforms__platform_id__template_onboarding_plans_get"];
        put?: never;
        /** Create Template Onboarding Plan */
        post: operations["create_template_onboarding_plan_automation_platforms__platform_id__template_onboarding_plans_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/template-onboarding/plans/{plan_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Template Onboarding Plan
         * @description Get a template onboarding plan
         */
        get: operations["get_template_onboarding_plan_automation_platforms__platform_id__template_onboarding_plans__plan_id__get"];
        put?: never;
        post?: never;
        /** Delete Template Onboarding Plan */
        delete: operations["delete_template_onboarding_plan_automation_platforms__platform_id__template_onboarding_plans__plan_id__delete"];
        options?: never;
        head?: never;
        /** Update Template Onboarding Plan */
        patch: operations["update_template_onboarding_plan_automation_platforms__platform_id__template_onboarding_plans__plan_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/template-onboarding/plans/{plan_id}/stage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Template Onboarding Plan Stage */
        patch: operations["update_template_onboarding_plan_stage_automation_platforms__platform_id__template_onboarding_plans__plan_id__stage_patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/template-onboarding/flows": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Template Onboarding Flows */
        get: operations["get_template_onboarding_flows_automation_platforms__platform_id__template_onboarding_flows_get"];
        put?: never;
        /** Create Template Onboarding Flow */
        post: operations["create_template_onboarding_flow_automation_platforms__platform_id__template_onboarding_flows_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/template-onboarding/flows/{flow_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Template Onboarding Flow */
        delete: operations["delete_template_onboarding_flow_automation_platforms__platform_id__template_onboarding_flows__flow_id__delete"];
        options?: never;
        head?: never;
        /** Update Template Onboarding Flow */
        patch: operations["update_template_onboarding_flow_automation_platforms__platform_id__template_onboarding_flows__flow_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/theme": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Theme
         * @description Get theme for the platform
         */
        get: operations["get_theme_automation_platforms__platform_id__theme_get"];
        put?: never;
        /**
         * Create Theme
         * @description Create theme for the platform
         */
        post: operations["create_theme_automation_platforms__platform_id__theme_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/theme/{theme_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Theme */
        patch: operations["update_theme_automation_platforms__platform_id__theme__theme_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/audience": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Audience
         * @description Get audience for the platform
         */
        get: operations["get_audience_automation_platforms__platform_id__audience_get"];
        put?: never;
        /**
         * Create Audience
         * @description Create audience for the platform
         */
        post: operations["create_audience_automation_platforms__platform_id__audience_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/audience/{audience_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Audience */
        delete: operations["delete_audience_automation_platforms__platform_id__audience__audience_id__delete"];
        options?: never;
        head?: never;
        /** Update Audience */
        patch: operations["update_audience_automation_platforms__platform_id__audience__audience_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/knowledge": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Knowledge Sources
         * @description Get all knowledge sources from DocsBot
         */
        get: operations["get_knowledge_sources_automation_platforms__platform_id__knowledge_get"];
        put?: never;
        /**
         * Create Knowledge Source
         * @description Create a new knowledge source in DocsBot
         */
        post: operations["create_knowledge_source_automation_platforms__platform_id__knowledge_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/knowledge/url-list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Urls */
        get: operations["get_urls_automation_platforms__platform_id__knowledge_url_list_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/knowledge/query": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Query Knowledge Source */
        get: operations["query_knowledge_source_automation_platforms__platform_id__knowledge_query_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/knowledge/{source_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Delete Knowledge Source
         * @description Delete a knowledge source from DocsBot
         */
        delete: operations["delete_knowledge_source_automation_platforms__platform_id__knowledge__source_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/knowledge/{source_id}/retry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Retry Knowledge Source
         * @description Retry indexing a failed knowledge source
         */
        put: operations["retry_knowledge_source_automation_platforms__platform_id__knowledge__source_id__retry_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/knowledge/{knowledge_source_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Knowledge Source */
        patch: operations["update_knowledge_source_automation_platforms__platform_id__knowledge__knowledge_source_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/knowledge/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Bulk Update Knowledge Source */
        post: operations["bulk_update_knowledge_source_automation_platforms__platform_id__knowledge_bulk_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/subscription-plans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Subscription Plans */
        get: operations["list_subscription_plans_automation_platforms__platform_id__subscription_plans_get"];
        put?: never;
        /**
         * Create Subscription Plan
         * @description Create audience for the platform
         */
        post: operations["create_subscription_plan_automation_platforms__platform_id__subscription_plans_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/subscription-plans/{plan_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Subscription Plan */
        get: operations["get_subscription_plan_automation_platforms__platform_id__subscription_plans__plan_id__get"];
        put?: never;
        post?: never;
        /** Delete Subscription Plan */
        delete: operations["delete_subscription_plan_automation_platforms__platform_id__subscription_plans__plan_id__delete"];
        options?: never;
        head?: never;
        /** Update Subscription Plan */
        patch: operations["update_subscription_plan_automation_platforms__platform_id__subscription_plans__plan_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Roles */
        get: operations["list_roles_automation_platforms__platform_id__roles_get"];
        put?: never;
        /** Create Role */
        post: operations["create_role_automation_platforms__platform_id__roles_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/roles/{role_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Role */
        get: operations["get_role_automation_platforms__platform_id__roles__role_id__get"];
        put?: never;
        post?: never;
        /** Delete Role */
        delete: operations["delete_role_automation_platforms__platform_id__roles__role_id__delete"];
        options?: never;
        head?: never;
        /** Update Role */
        patch: operations["update_role_automation_platforms__platform_id__roles__role_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/credentials": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Credentials */
        get: operations["list_credentials_automation_platforms__platform_id__credentials_get"];
        put?: never;
        /** Create Platform Credentials */
        post: operations["create_platform_credentials_automation_platforms__platform_id__credentials_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}/credentials/{credentials_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Platform Credentials */
        delete: operations["delete_platform_credentials_automation_platforms__platform_id__credentials__credentials_id__delete"];
        options?: never;
        head?: never;
        /** Update Platform Credentials */
        patch: operations["update_platform_credentials_automation_platforms__platform_id__credentials__credentials_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/credentials/{credential_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Credentials */
        get: operations["get_credentials_automation_platforms__platform_id__credentials__credential_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Platforms
         * @description List platforms
         */
        get: operations["get_platforms_automation_platforms_get"];
        put?: never;
        /**
         * Create Platform
         * @description Create a platform
         */
        post: operations["create_platform_automation_platforms_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/automation/platforms/{platform_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Platform
         * @description Retrieve a platform
         */
        get: operations["get_platform_automation_platforms__platform_id__get"];
        put?: never;
        post?: never;
        /**
         * Delete Platform
         * @description Delete a platform
         */
        delete: operations["delete_platform_automation_platforms__platform_id__delete"];
        options?: never;
        head?: never;
        /**
         * Partial Update Platform
         * @description Update a platform
         */
        patch: operations["partial_update_platform_automation_platforms__platform_id__patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/toggle_visibility": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Toggle Platform Visibility
         * @description Toggle a platform's visibility
         */
        patch: operations["toggle_platform_visibility_automation_platforms__platform_id__toggle_visibility_patch"];
        trace?: never;
    };
    "/automation/platforms/{platform_id}/user_whitelist": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update User Whitelist
         * @description Update a platform's user whitelist
         */
        patch: operations["update_user_whitelist_automation_platforms__platform_id__user_whitelist_patch"];
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health Check */
        get: operations["health_check_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vector/delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Flow Points */
        delete: operations["delete_flow_points_vector_delete_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/asyncapi": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Serve Asyncapi Schema
         * @description Serve the AsyncAPI schema as an HTML response.
         */
        get: operations["serve_asyncapi_schema_asyncapi_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/asyncapi.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Download App Json Schema */
        get: operations["download_app_json_schema_asyncapi_json_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/asyncapi.yaml": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Download App Yaml Schema */
        get: operations["download_app_yaml_schema_asyncapi_yaml_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AddKnowledgeSource */
        AddKnowledgeSource: {
            /** Name */
            name: string;
            /** Url */
            url: string;
            /** Description */
            description?: string | null;
            /** Source Type */
            source_type: string;
            /** Selected Urls */
            selected_urls?: string[] | null;
        };
        /** AgentFlow */
        AgentFlow: {
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Steps */
            steps: components["schemas"]["AgentRecordStep"][];
        };
        /** AgentRecordStep */
        AgentRecordStep: {
            /** Index */
            index?: number | null;
            /** Message */
            message?: string | null;
            /** Action Name */
            action_name: string;
            /** Url */
            url?: string | null;
            /** Css Selector */
            css_selector?: string | null;
            /** Xpath */
            xpath?: string | null;
            /** Wait For Input */
            wait_for_input?: boolean | null;
            /** Title */
            title?: string | null;
        };
        /** AnnouncementCreate */
        AnnouncementCreate: {
            /** Title */
            title: string;
            /** Description */
            description: string;
            /** Image */
            image: string;
            /** Flow Id */
            flow_id?: string | null;
            /**
             * Platform Id
             * Format: uuid
             */
            platform_id: string;
            /** User Id */
            user_id: string;
        };
        /** AnnouncementFromTemplateCreate */
        AnnouncementFromTemplateCreate: {
            /** User Id */
            user_id: string;
        };
        /** AnnouncementUpdate */
        AnnouncementUpdate: {
            /** Title */
            title?: string | null;
            /** Description */
            description?: string | null;
            /** Image */
            image?: string | null;
            /** Flow Id */
            flow_id?: string | null;
        };
        /** ApiKeyCreate */
        ApiKeyCreate: {
            /** Name */
            name: string;
            /** Expires At */
            expires_at?: string | null;
        };
        /** ApiKeyUpdate */
        ApiKeyUpdate: {
            /** Name */
            name: string | null;
        };
        /** AudienceCreate */
        AudienceCreate: {
            /** Name */
            name: string;
        };
        /** AudienceUpdate */
        AudienceUpdate: {
            /** Name */
            name: string;
        };
        /** Body_create_template_onboarding_plan_automation_platforms__platform_id__template_onboarding_plans_post */
        Body_create_template_onboarding_plan_automation_platforms__platform_id__template_onboarding_plans_post: {
            template_onboarding_plan_data: components["schemas"]["handlers__automation__platform__template_onboarding__TemplateOnboardingPlanCreate"];
            /** Template Onboarding Flows */
            template_onboarding_flows?: components["schemas"]["TemplateOnboardingFlowCreate"][];
        };
        /** BulkUpdateKnowledgeSource */
        BulkUpdateKnowledgeSource: {
            /** Ids */
            ids: string[];
            /** Is Disabled */
            is_disabled?: boolean | null;
            /** Status */
            status?: ("Processing" | "Processed" | "Failed") | null;
            /**
             * Is Deleted
             * @default false
             */
            is_deleted: boolean;
        };
        /** BulkUpdatePlatformKnowledgeResult */
        BulkUpdatePlatformKnowledgeResult: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Deleted */
            deleted: components["schemas"]["BulkUpdatePlatformKnowledgeResultDeletedItem"][];
            /** Updated */
            updated: components["schemas"]["BulkUpdatePlatformKnowledgeResultUpdatedItem"][];
        };
        /** BulkUpdatePlatformKnowledgeResultDeletedItem */
        BulkUpdatePlatformKnowledgeResultDeletedItem: {
            /** Is Disabled */
            is_disabled: boolean | null;
            /** Url */
            url: string | null;
            status: components["schemas"]["LayupAutomationPlatformKnowledgeSourceStatus"] | null;
            source_type: components["schemas"]["LayupAutomationPlatformKnowledgeSourceType"];
            /** Name */
            name: string | null;
            /** Last Processed At */
            last_processed_at: string | null;
            /** Job Id */
            job_id: string | null;
            /** Description */
            description: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** BulkUpdatePlatformKnowledgeResultUpdatedItem */
        BulkUpdatePlatformKnowledgeResultUpdatedItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Job Id */
            job_id: string | null;
            /** Last Processed At */
            last_processed_at: string | null;
            /** Name */
            name: string | null;
            source_type: components["schemas"]["LayupAutomationPlatformKnowledgeSourceType"];
            status: components["schemas"]["LayupAutomationPlatformKnowledgeSourceStatus"] | null;
            /** Url */
            url: string | null;
            /** Is Disabled */
            is_disabled: boolean | null;
        };
        /** CreateAnnouncementResult */
        CreateAnnouncementResult: {
            template_announcement: components["schemas"]["CreateAnnouncementResultTemplateAnnouncement"];
            state: components["schemas"]["CreateAnnouncementResultState"] | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** User Id */
            user_id: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** CreateAnnouncementResultState */
        CreateAnnouncementResultState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationAnnouncementStatus"] | null;
        };
        /** CreateAnnouncementResultTemplateAnnouncement */
        CreateAnnouncementResultTemplateAnnouncement: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            flow: components["schemas"]["CreateAnnouncementResultTemplateAnnouncementFlow"] | null;
        };
        /** CreateAnnouncementResultTemplateAnnouncementFlow */
        CreateAnnouncementResultTemplateAnnouncementFlow: {
            /** Steps */
            steps: components["schemas"]["CreateAnnouncementResultTemplateAnnouncementFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__announcement__create_announcement_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** CreateAnnouncementResultTemplateAnnouncementFlowStepsItem */
        CreateAnnouncementResultTemplateAnnouncementFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** CreateApiKeyResult */
        CreateApiKeyResult: {
            /** Name */
            name: string;
            /** Key Id */
            key_id: string | null;
            /** Expires At */
            expires_at: string | null;
            /** Key */
            key: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** CreateAudienceResult */
        CreateAudienceResult: {
            platform: components["schemas"]["CreateAudienceResultPlatform"];
            /** Name */
            name: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** CreateAudienceResultPlatform */
        CreateAudienceResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** CreateGuidanceFlowResult */
        CreateGuidanceFlowResult: {
            /** Steps */
            steps: components["schemas"]["CreateGuidanceFlowResultStepsItem"][];
            /** Credentials */
            credentials: components["schemas"]["CreateGuidanceFlowResultCredentialsItem"][];
            /** Starting Url */
            starting_url: string | null;
            /** Instructions */
            instructions: string | null;
            /** Expected Outcome */
            expected_outcome: string | null;
            status: components["schemas"]["db__queries__guidance_flow__create_guidance_flow_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            /** Name */
            name: string;
            /** Description */
            description: string | null;
            /** Category */
            category: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** CreateGuidanceFlowResultCredentialsItem */
        CreateGuidanceFlowResultCredentialsItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /** CreateGuidanceFlowResultStepsItem */
        CreateGuidanceFlowResultStepsItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
            /** Context */
            context: string | null;
        };
        /** CreateOnboardingFlowUsingGuidanceFlowResult */
        CreateOnboardingFlowUsingGuidanceFlowResult: {
            flow: components["schemas"]["CreateOnboardingFlowUsingGuidanceFlowResultFlow"];
            state: components["schemas"]["CreateOnboardingFlowUsingGuidanceFlowResultState"] | null;
            /** Title */
            title: string;
            /** Index */
            index: number;
            /** Image */
            image: string | null;
            /** Description */
            description: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** CreateOnboardingFlowUsingGuidanceFlowResultFlow */
        CreateOnboardingFlowUsingGuidanceFlowResultFlow: {
            /** Steps */
            steps: components["schemas"]["CreateOnboardingFlowUsingGuidanceFlowResultFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__onboarding__create_onboarding_flow_using_guidance_flow_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Category */
            category: string | null;
        };
        /** CreateOnboardingFlowUsingGuidanceFlowResultFlowStepsItem */
        CreateOnboardingFlowUsingGuidanceFlowResultFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** CreateOnboardingFlowUsingGuidanceFlowResultState */
        CreateOnboardingFlowUsingGuidanceFlowResultState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationOnboardingFlowStatus"] | null;
        };
        /** CreateOnboardingPlanResult */
        CreateOnboardingPlanResult: {
            template_onboarding_plan: components["schemas"]["CreateOnboardingPlanResultTemplateOnboardingPlan"];
            /** User Id */
            user_id: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** CreateOnboardingPlanResultTemplateOnboardingPlan */
        CreateOnboardingPlanResultTemplateOnboardingPlan: {
            /** Flows */
            flows: components["schemas"]["CreateOnboardingPlanResultTemplateOnboardingPlanFlowsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateOnboardingPlanStage"] | null;
            /** Strict Order */
            strict_order: boolean | null;
        };
        /** CreateOnboardingPlanResultTemplateOnboardingPlanFlowsItem */
        CreateOnboardingPlanResultTemplateOnboardingPlanFlowsItem: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
        };
        /** CreatePlatformCredentialsResult */
        CreatePlatformCredentialsResult: {
            /** Password */
            password: string;
            /** Username */
            username: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            subscription_plan: components["schemas"]["CreatePlatformCredentialsResultSubscriptionPlan"];
            role: components["schemas"]["CreatePlatformCredentialsResultRole"];
            platform: components["schemas"]["CreatePlatformCredentialsResultPlatform"];
            deleted_by: components["schemas"]["CreatePlatformCredentialsResultDeletedBy"] | null;
            last_modified_by: components["schemas"]["CreatePlatformCredentialsResultDeletedBy"] | null;
        };
        /** CreatePlatformCredentialsResultDeletedBy */
        CreatePlatformCredentialsResultDeletedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** CreatePlatformCredentialsResultPlatform */
        CreatePlatformCredentialsResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** CreatePlatformCredentialsResultRole */
        CreatePlatformCredentialsResultRole: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Identifier */
            identifier: string;
            /** Name */
            name: string;
        };
        /** CreatePlatformCredentialsResultSubscriptionPlan */
        CreatePlatformCredentialsResultSubscriptionPlan: {
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Active */
            is_active: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Identifier */
            identifier: string;
            /** Deleted At */
            deleted_at: string | null;
        };
        /** CreatePlatformResult */
        CreatePlatformResult: {
            context: components["schemas"]["CreatePlatformResultContext"];
            user_whitelist: components["schemas"]["CreatePlatformResultUserWhitelist"];
            new_template_onboarding_plan: components["schemas"]["CreatePlatformResultNewTemplateOnboardingPlan"];
            /** Audience */
            audience: components["schemas"]["CreatePlatformResultAudienceItem"][];
            /** Docsbot Id */
            docsbot_id: string | null;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Name */
            name: string;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Display Name */
            display_name: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** CreatePlatformResultAudienceItem */
        CreatePlatformResultAudienceItem: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** CreatePlatformResultContext */
        CreatePlatformResultContext: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** CreatePlatformResultNewTemplateOnboardingPlan */
        CreatePlatformResultNewTemplateOnboardingPlan: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** CreatePlatformResultUserWhitelist */
        CreatePlatformResultUserWhitelist: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** CreateRoleResult */
        CreateRoleResult: {
            /** Name */
            name: string;
            /** Identifier */
            identifier: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Subscription Plans */
            subscription_plans: components["schemas"]["CreateRoleResultSubscriptionPlansItem"][];
            platform: components["schemas"]["CreateRoleResultPlatform"];
            deleted_by: components["schemas"]["CreateRoleResultDeletedBy"] | null;
            last_modified_by: components["schemas"]["CreateRoleResultDeletedBy"] | null;
        };
        /** CreateRoleResultDeletedBy */
        CreateRoleResultDeletedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** CreateRoleResultPlatform */
        CreateRoleResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** CreateRoleResultSubscriptionPlansItem */
        CreateRoleResultSubscriptionPlansItem: {
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Active */
            is_active: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Identifier */
            identifier: string;
            /** Deleted At */
            deleted_at: string | null;
        };
        /** CreateSubscriptionPlanResult */
        CreateSubscriptionPlanResult: {
            /** Deleted At */
            deleted_at: string | null;
            /** Identifier */
            identifier: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Active */
            is_active: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /** Roles */
            roles: components["schemas"]["CreateSubscriptionPlanResultRolesItem"][];
            last_modified_by: components["schemas"]["CreateSubscriptionPlanResultLastModifiedBy"] | null;
            platform: components["schemas"]["CreateSubscriptionPlanResultPlatform"];
            deleted_by: components["schemas"]["CreateSubscriptionPlanResultLastModifiedBy"] | null;
        };
        /** CreateSubscriptionPlanResultLastModifiedBy */
        CreateSubscriptionPlanResultLastModifiedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** CreateSubscriptionPlanResultPlatform */
        CreateSubscriptionPlanResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** CreateSubscriptionPlanResultRolesItem */
        CreateSubscriptionPlanResultRolesItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Identifier */
            identifier: string;
            /** Name */
            name: string;
        };
        /** CreateTemplateAnnouncementResult */
        CreateTemplateAnnouncementResult: {
            flow: components["schemas"]["CreateTemplateAnnouncementResultFlow"] | null;
            /** To Date */
            to_date: string | null;
            /** Title */
            title: string;
            stage: components["schemas"]["LayupAutomationTemplateAnnouncementStage"] | null;
            /** Open On Login */
            open_on_login: boolean | null;
            /** Image */
            image: string | null;
            /** From Date */
            from_date: string | null;
            /** Description */
            description: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** CreateTemplateAnnouncementResultFlow */
        CreateTemplateAnnouncementResultFlow: {
            /** Steps */
            steps: components["schemas"]["CreateTemplateAnnouncementResultFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__announcement__create_template_announcement_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** CreateTemplateAnnouncementResultFlowStepsItem */
        CreateTemplateAnnouncementResultFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** CreateTemplateOnboardingFlowUsingGuidanceFlowResult */
        CreateTemplateOnboardingFlowUsingGuidanceFlowResult: {
            flow: components["schemas"]["CreateTemplateOnboardingFlowUsingGuidanceFlowResultFlow"];
            /** Title */
            title: string;
            /** Index */
            index: number;
            /** Image */
            image: string | null;
            /** Description */
            description: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** CreateTemplateOnboardingFlowUsingGuidanceFlowResultFlow */
        CreateTemplateOnboardingFlowUsingGuidanceFlowResultFlow: {
            /** Steps */
            steps: components["schemas"]["CreateTemplateOnboardingFlowUsingGuidanceFlowResultFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__onboarding__create_template_onboarding_flow_using_guidance_flow_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** CreateTemplateOnboardingFlowUsingGuidanceFlowResultFlowStepsItem */
        CreateTemplateOnboardingFlowUsingGuidanceFlowResultFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** CreateTemplateOnboardingPlanResult */
        CreateTemplateOnboardingPlanResult: {
            /** Flows */
            flows: components["schemas"]["CreateTemplateOnboardingPlanResultFlowsItem"][];
            /** Strict Order */
            strict_order: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateOnboardingPlanStage"] | null;
            /** Open On Login */
            open_on_login: boolean | null;
            /** Name */
            name: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** CreateTemplateOnboardingPlanResultFlowsItem */
        CreateTemplateOnboardingPlanResultFlowsItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Image */
            image: string | null;
            /** Index */
            index: number;
            /** Title */
            title: string;
        };
        /** CreateThemeResult */
        CreateThemeResult: {
            widget_variant: components["schemas"]["LayupAutomationWidgetVariant"] | null;
            widget_position: components["schemas"]["LayupAutomationWidgetPosition"] | null;
            /** Icons */
            icons: string | null;
            guidance_tone: components["schemas"]["LayupAutomationGuidanceTone"] | null;
            /** Font Sizes */
            font_sizes: string | null;
            /** Font Family */
            font_family: string | null;
            /** Colors */
            colors: string | null;
            /** Border Radius */
            border_radius: number | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** DeleteAudienceResult */
        DeleteAudienceResult: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** DeletePlatformCredentialsResult */
        DeletePlatformCredentialsResult: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** DeleteRoleResult */
        DeleteRoleResult: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** DeleteSubscriptionPlanResult */
        DeleteSubscriptionPlanResult: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** FeedbackCreate */
        FeedbackCreate: {
            /**
             * From Cache
             * @default false
             */
            from_cache: boolean | null;
            /**
             * Had Full Run
             * @default false
             */
            had_full_run: boolean | null;
            /** Flow */
            flow?: Record<string, never> | null;
            /** Query */
            query?: Record<string, never> | null;
        };
        /** GetAnnouncementResult */
        GetAnnouncementResult: {
            template_announcement: components["schemas"]["GetAnnouncementResultTemplateAnnouncement"];
            state: components["schemas"]["GetAnnouncementResultState"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** User Id */
            user_id: string | null;
        };
        /** GetAnnouncementResultState */
        GetAnnouncementResultState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationAnnouncementStatus"] | null;
        };
        /** GetAnnouncementResultTemplateAnnouncement */
        GetAnnouncementResultTemplateAnnouncement: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            flow: components["schemas"]["GetAnnouncementResultTemplateAnnouncementFlow"] | null;
        };
        /** GetAnnouncementResultTemplateAnnouncementFlow */
        GetAnnouncementResultTemplateAnnouncementFlow: {
            /** Steps */
            steps: components["schemas"]["GetAnnouncementResultTemplateAnnouncementFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__announcement__get_announcement_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetAnnouncementResultTemplateAnnouncementFlowStepsItem */
        GetAnnouncementResultTemplateAnnouncementFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetAnnouncementsByPlatformUserIdResult */
        GetAnnouncementsByPlatformUserIdResult: {
            template_announcement: components["schemas"]["GetAnnouncementsByPlatformUserIdResultTemplateAnnouncement"];
            state: components["schemas"]["GetAnnouncementsByPlatformUserIdResultState"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** User Id */
            user_id: string | null;
        };
        /** GetAnnouncementsByPlatformUserIdResultState */
        GetAnnouncementsByPlatformUserIdResultState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationAnnouncementStatus"] | null;
        };
        /** GetAnnouncementsByPlatformUserIdResultTemplateAnnouncement */
        GetAnnouncementsByPlatformUserIdResultTemplateAnnouncement: {
            flow: components["schemas"]["GetAnnouncementsByPlatformUserIdResultTemplateAnnouncementFlow"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string;
            /** From Date */
            from_date: string | null;
            /** Image */
            image: string | null;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateAnnouncementStage"] | null;
            /** Title */
            title: string;
            /** To Date */
            to_date: string | null;
        };
        /** GetAnnouncementsByPlatformUserIdResultTemplateAnnouncementFlow */
        GetAnnouncementsByPlatformUserIdResultTemplateAnnouncementFlow: {
            /** Steps */
            steps: components["schemas"]["GetAnnouncementsByPlatformUserIdResultTemplateAnnouncementFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__announcement__get_announcements_by_platform_user_id_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetAnnouncementsByPlatformUserIdResultTemplateAnnouncementFlowStepsItem */
        GetAnnouncementsByPlatformUserIdResultTemplateAnnouncementFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetAnnouncementsResult */
        GetAnnouncementsResult: {
            template_announcement: components["schemas"]["GetAnnouncementsResultTemplateAnnouncement"];
            state: components["schemas"]["GetAnnouncementsResultState"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** User Id */
            user_id: string | null;
        };
        /** GetAnnouncementsResultState */
        GetAnnouncementsResultState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationAnnouncementStatus"] | null;
        };
        /** GetAnnouncementsResultTemplateAnnouncement */
        GetAnnouncementsResultTemplateAnnouncement: {
            flow: components["schemas"]["GetAnnouncementsResultTemplateAnnouncementFlow"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string;
            /** From Date */
            from_date: string | null;
            /** Image */
            image: string | null;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateAnnouncementStage"] | null;
            /** Title */
            title: string;
            /** To Date */
            to_date: string | null;
        };
        /** GetAnnouncementsResultTemplateAnnouncementFlow */
        GetAnnouncementsResultTemplateAnnouncementFlow: {
            /** Steps */
            steps: components["schemas"]["GetAnnouncementsResultTemplateAnnouncementFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__announcement__get_announcements_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetAnnouncementsResultTemplateAnnouncementFlowStepsItem */
        GetAnnouncementsResultTemplateAnnouncementFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetApiKeyByIdResult */
        GetApiKeyByIdResult: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Key */
            key: string;
            /** Expires At */
            expires_at: string | null;
            /** Key Id */
            key_id: string | null;
            /** Name */
            name: string;
        };
        /** GetApiKeyByOrganizationResult */
        GetApiKeyByOrganizationResult: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Key */
            key: string;
            /** Expires At */
            expires_at: string | null;
            /** Key Id */
            key_id: string | null;
            /** Name */
            name: string;
        };
        /** GetAudiencesByPlatformIdResult */
        GetAudiencesByPlatformIdResult: {
            platform: components["schemas"]["GetAudiencesByPlatformIdResultPlatform"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
        };
        /** GetAudiencesByPlatformIdResultPlatform */
        GetAudiencesByPlatformIdResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** GetGuidanceFlowByIdResult */
        GetGuidanceFlowByIdResult: {
            /** Steps */
            steps: components["schemas"]["GetGuidanceFlowByIdResultStepsItem"][];
            /** Credentials */
            credentials: components["schemas"]["GetGuidanceFlowByIdResultCredentialsItem"][];
            /** Starting Url */
            starting_url: string | null;
            /** Instructions */
            instructions: string | null;
            /** Expected Outcome */
            expected_outcome: string | null;
            status: components["schemas"]["db__queries__guidance_flow__get_guidance_flow_by_id_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            /** Name */
            name: string;
            /** Description */
            description: string | null;
            /** Category */
            category: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** GetGuidanceFlowByIdResultCredentialsItem */
        GetGuidanceFlowByIdResultCredentialsItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /** GetGuidanceFlowByIdResultStepsItem */
        GetGuidanceFlowByIdResultStepsItem: {
            /** Context */
            context: string;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
            /** Selection Criteria */
            selection_criteria: string | null;
            /** Index */
            index: number;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** GetGuidanceFlowsResult */
        GetGuidanceFlowsResult: {
            /** Steps */
            steps: components["schemas"]["GetGuidanceFlowsResultStepsItem"][];
            /** Credentials */
            credentials: components["schemas"]["GetGuidanceFlowsResultCredentialsItem"][];
            /** Total Runs */
            total_runs: number;
            /** Total No Guide Available Runs */
            total_no_guide_available_runs: number;
            /** Total Created Runs */
            total_created_runs: number;
            /** Total Engaged Runs */
            total_engaged_runs: number;
            last_run: components["schemas"]["GetGuidanceFlowsResultLastRun"] | null;
            /** Starting Url */
            starting_url: string | null;
            /** Instructions */
            instructions: string | null;
            /** Expected Outcome */
            expected_outcome: string | null;
            status: components["schemas"]["db__queries__guidance_flow__get_guidance_flows_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            /** Name */
            name: string;
            /** Description */
            description: string | null;
            /** Category */
            category: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** GetGuidanceFlowsResultCredentialsItem */
        GetGuidanceFlowsResultCredentialsItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /** GetGuidanceFlowsResultLastRun */
        GetGuidanceFlowsResultLastRun: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
        };
        /** GetGuidanceFlowsResultStepsItem */
        GetGuidanceFlowsResultStepsItem: {
            /** Context */
            context: string;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
            /** Selection Criteria */
            selection_criteria: string | null;
            /** Index */
            index: number;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** GetOnboardingFlowsResult */
        GetOnboardingFlowsResult: {
            template_onboarding_flow: components["schemas"]["GetOnboardingFlowsResultTemplateOnboardingFlow"];
            state: components["schemas"]["GetOnboardingFlowsResultState"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
        };
        /** GetOnboardingFlowsResultState */
        GetOnboardingFlowsResultState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationOnboardingFlowStatus"] | null;
        };
        /** GetOnboardingFlowsResultTemplateOnboardingFlow */
        GetOnboardingFlowsResultTemplateOnboardingFlow: {
            flow: components["schemas"]["GetOnboardingFlowsResultTemplateOnboardingFlowFlow"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Image */
            image: string | null;
            /** Index */
            index: number;
            /** Title */
            title: string;
        };
        /** GetOnboardingFlowsResultTemplateOnboardingFlowFlow */
        GetOnboardingFlowsResultTemplateOnboardingFlowFlow: {
            /** Steps */
            steps: components["schemas"]["GetOnboardingFlowsResultTemplateOnboardingFlowFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__onboarding__get_onboarding_flows_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetOnboardingFlowsResultTemplateOnboardingFlowFlowStepsItem */
        GetOnboardingFlowsResultTemplateOnboardingFlowFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetOnboardingPlanByPlatformUserIdResult */
        GetOnboardingPlanByPlatformUserIdResult: {
            template_onboarding_plan: components["schemas"]["GetOnboardingPlanByPlatformUserIdResultTemplateOnboardingPlan"];
            /** Onboarding Flows */
            onboarding_flows: components["schemas"]["GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** User Id */
            user_id: string | null;
        };
        /** GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItem */
        GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItem: {
            template_onboarding_flow: components["schemas"]["GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemTemplateOnboardingFlow"];
            state: components["schemas"]["GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemState"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
        };
        /** GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemState */
        GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationOnboardingFlowStatus"] | null;
        };
        /** GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemTemplateOnboardingFlow */
        GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemTemplateOnboardingFlow: {
            flow: components["schemas"]["GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemTemplateOnboardingFlowFlow"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Image */
            image: string | null;
            /** Index */
            index: number;
            /** Title */
            title: string;
        };
        /** GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemTemplateOnboardingFlowFlow */
        GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemTemplateOnboardingFlowFlow: {
            /** Steps */
            steps: components["schemas"]["GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__onboarding__get_onboarding_plan_by_platform_user_id_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem */
        GetOnboardingPlanByPlatformUserIdResultOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetOnboardingPlanByPlatformUserIdResultTemplateOnboardingPlan */
        GetOnboardingPlanByPlatformUserIdResultTemplateOnboardingPlan: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateOnboardingPlanStage"] | null;
            /** Strict Order */
            strict_order: boolean | null;
        };
        /** GetOnboardingPlanResult */
        GetOnboardingPlanResult: {
            template_onboarding_plan: components["schemas"]["GetOnboardingPlanResultTemplateOnboardingPlan"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** User Id */
            user_id: string | null;
        };
        /** GetOnboardingPlanResultTemplateOnboardingPlan */
        GetOnboardingPlanResultTemplateOnboardingPlan: {
            /** Onboarding Flows */
            onboarding_flows: components["schemas"]["GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateOnboardingPlanStage"] | null;
            /** Strict Order */
            strict_order: boolean | null;
        };
        /** GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItem */
        GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItem: {
            template_onboarding_flow: components["schemas"]["GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlow"];
            state: components["schemas"]["GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemState"] | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
        };
        /** GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemState */
        GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationOnboardingFlowStatus"] | null;
        };
        /** GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlow */
        GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlow: {
            flow: components["schemas"]["GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlow"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Image */
            image: string | null;
            /** Index */
            index: number;
            /** Title */
            title: string;
        };
        /** GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlow */
        GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlow: {
            /** Steps */
            steps: components["schemas"]["GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__onboarding__get_onboarding_plan_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem */
        GetOnboardingPlanResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetOnboardingPlansResult */
        GetOnboardingPlansResult: {
            template_onboarding_plan: components["schemas"]["GetOnboardingPlansResultTemplateOnboardingPlan"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** User Id */
            user_id: string | null;
        };
        /** GetOnboardingPlansResultTemplateOnboardingPlan */
        GetOnboardingPlansResultTemplateOnboardingPlan: {
            /** Onboarding Flows */
            onboarding_flows: components["schemas"]["GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateOnboardingPlanStage"] | null;
            /** Strict Order */
            strict_order: boolean | null;
        };
        /** GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItem */
        GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItem: {
            template_onboarding_flow: components["schemas"]["GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlow"];
            state: components["schemas"]["GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemState"] | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
        };
        /** GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemState */
        GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationOnboardingFlowStatus"] | null;
        };
        /** GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlow */
        GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlow: {
            flow: components["schemas"]["GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlow"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Image */
            image: string | null;
            /** Index */
            index: number;
            /** Title */
            title: string;
        };
        /** GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlow */
        GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlow: {
            /** Steps */
            steps: components["schemas"]["GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__onboarding__get_onboarding_plans_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem */
        GetOnboardingPlansResultTemplateOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetPlatformByIdResult */
        GetPlatformByIdResult: {
            context: components["schemas"]["GetPlatformByIdResultContext"] | null;
            user_whitelist: components["schemas"]["GetPlatformByIdResultUserWhitelist"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** GetPlatformByIdResultContext */
        GetPlatformByIdResultContext: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Knowledge Base Config */
            knowledge_base_config: string | null;
            /** Mappings */
            mappings: string | null;
        };
        /** GetPlatformByIdResultUserWhitelist */
        GetPlatformByIdResultUserWhitelist: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Group Ids */
            group_ids: string | null;
            /** User Ids */
            user_ids: string | null;
        };
        /** GetPlatformCredentialsByIdResult */
        GetPlatformCredentialsByIdResult: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            last_modified_by: components["schemas"]["GetPlatformCredentialsByIdResultLastModifiedBy"] | null;
            deleted_by: components["schemas"]["GetPlatformCredentialsByIdResultLastModifiedBy"] | null;
            platform: components["schemas"]["GetPlatformCredentialsByIdResultPlatform"];
            role: components["schemas"]["GetPlatformCredentialsByIdResultRole"];
            subscription_plan: components["schemas"]["GetPlatformCredentialsByIdResultSubscriptionPlan"];
        };
        /** GetPlatformCredentialsByIdResultLastModifiedBy */
        GetPlatformCredentialsByIdResultLastModifiedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** GetPlatformCredentialsByIdResultPlatform */
        GetPlatformCredentialsByIdResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** GetPlatformCredentialsByIdResultRole */
        GetPlatformCredentialsByIdResultRole: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Identifier */
            identifier: string;
            /** Name */
            name: string;
        };
        /** GetPlatformCredentialsByIdResultSubscriptionPlan */
        GetPlatformCredentialsByIdResultSubscriptionPlan: {
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Active */
            is_active: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Identifier */
            identifier: string;
            /** Deleted At */
            deleted_at: string | null;
        };
        /** GetPlatformCredentialsByPlatformIdResult */
        GetPlatformCredentialsByPlatformIdResult: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            last_modified_by: components["schemas"]["GetPlatformCredentialsByPlatformIdResultLastModifiedBy"] | null;
            deleted_by: components["schemas"]["GetPlatformCredentialsByPlatformIdResultLastModifiedBy"] | null;
            platform: components["schemas"]["GetPlatformCredentialsByPlatformIdResultPlatform"];
            role: components["schemas"]["GetPlatformCredentialsByPlatformIdResultRole"];
            subscription_plan: components["schemas"]["GetPlatformCredentialsByPlatformIdResultSubscriptionPlan"];
        };
        /** GetPlatformCredentialsByPlatformIdResultLastModifiedBy */
        GetPlatformCredentialsByPlatformIdResultLastModifiedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** GetPlatformCredentialsByPlatformIdResultPlatform */
        GetPlatformCredentialsByPlatformIdResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** GetPlatformCredentialsByPlatformIdResultRole */
        GetPlatformCredentialsByPlatformIdResultRole: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Identifier */
            identifier: string;
            /** Name */
            name: string;
        };
        /** GetPlatformCredentialsByPlatformIdResultSubscriptionPlan */
        GetPlatformCredentialsByPlatformIdResultSubscriptionPlan: {
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Active */
            is_active: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Identifier */
            identifier: string;
            /** Deleted At */
            deleted_at: string | null;
        };
        /** GetPlatformsResult */
        GetPlatformsResult: {
            context: components["schemas"]["GetPlatformsResultContext"] | null;
            user_whitelist: components["schemas"]["GetPlatformsResultUserWhitelist"] | null;
            /** Audiences */
            audiences: components["schemas"]["GetPlatformsResultAudiencesItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** GetPlatformsResultAudiencesItem */
        GetPlatformsResultAudiencesItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
        };
        /** GetPlatformsResultContext */
        GetPlatformsResultContext: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Knowledge Base Config */
            knowledge_base_config: string | null;
            /** Mappings */
            mappings: string | null;
        };
        /** GetPlatformsResultUserWhitelist */
        GetPlatformsResultUserWhitelist: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Group Ids */
            group_ids: string | null;
            /** User Ids */
            user_ids: string | null;
        };
        /** GetQueriesResult */
        GetQueriesResult: {
            platform: components["schemas"]["GetQueriesResultPlatform"];
            flow: components["schemas"]["GetQueriesResultFlow"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Group Id */
            group_id: string | null;
            /** Is Helpful */
            is_helpful: boolean | null;
            /** Query */
            query: string;
            status: components["schemas"]["LayupAutomationQueryStatus"];
            /** Tags */
            tags: string | null;
            type: components["schemas"]["LayupAutomationQueryType"];
            /** User Id */
            user_id: string | null;
        };
        /** GetQueriesResultFlow */
        GetQueriesResultFlow: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
            status: components["schemas"]["db__queries__query__get_queries_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Category */
            category: string | null;
        };
        /** GetQueriesResultPlatform */
        GetQueriesResultPlatform: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
        };
        /** GetQueryByIdResult */
        GetQueryByIdResult: {
            platform: components["schemas"]["GetQueryByIdResultPlatform"];
            flow: components["schemas"]["GetQueryByIdResultFlow"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Group Id */
            group_id: string | null;
            /** Is Helpful */
            is_helpful: boolean | null;
            /** Query */
            query: string;
            status: components["schemas"]["LayupAutomationQueryStatus"];
            /** Tags */
            tags: string | null;
            type: components["schemas"]["LayupAutomationQueryType"];
            /** User Id */
            user_id: string | null;
        };
        /** GetQueryByIdResultFlow */
        GetQueryByIdResultFlow: {
            /** Steps */
            steps: components["schemas"]["GetQueryByIdResultFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__query__get_query_by_id_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetQueryByIdResultFlowStepsItem */
        GetQueryByIdResultFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetQueryByIdResultPlatform */
        GetQueryByIdResultPlatform: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
        };
        /** GetQueryStatsResult */
        GetQueryStatsResult: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            platform: components["schemas"]["GetQueryStatsResultPlatform"] | null;
            stats: components["schemas"]["GetQueryStatsResultStats"];
        };
        /** GetQueryStatsResultPlatform */
        GetQueryStatsResultPlatform: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
        };
        /** GetQueryStatsResultStats */
        GetQueryStatsResultStats: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            guide_queries: components["schemas"]["GetQueryStatsResultStatsGuideQueries"];
            announcement_queries: components["schemas"]["GetQueryStatsResultStatsAnnouncementQueries"];
            onboarding_queries: components["schemas"]["GetQueryStatsResultStatsOnboardingQueries"];
        };
        /** GetQueryStatsResultStatsAnnouncementQueries */
        GetQueryStatsResultStatsAnnouncementQueries: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Queries */
            queries: components["schemas"]["GetQueryStatsResultStatsAnnouncementQueriesQueriesItem"][];
            /** Total */
            total: number;
            /** Today */
            today: number;
        };
        /** GetQueryStatsResultStatsAnnouncementQueriesQueriesItem */
        GetQueryStatsResultStatsAnnouncementQueriesQueriesItem: {
            flow: components["schemas"]["GetQueryStatsResultStatsAnnouncementQueriesQueriesItemFlow"];
            status: components["schemas"]["LayupAutomationAnnouncementStatus"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
        };
        /** GetQueryStatsResultStatsAnnouncementQueriesQueriesItemFlow */
        GetQueryStatsResultStatsAnnouncementQueriesQueriesItemFlow: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string | null;
            status: components["schemas"]["LayupAutomationAnnouncementStatus"] | null;
        };
        /** GetQueryStatsResultStatsGuideQueries */
        GetQueryStatsResultStatsGuideQueries: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Queries */
            queries: components["schemas"]["GetQueryStatsResultStatsGuideQueriesQueriesItem"][];
            /** Total */
            total: number;
            /** Today */
            today: number;
        };
        /** GetQueryStatsResultStatsGuideQueriesQueriesItem */
        GetQueryStatsResultStatsGuideQueriesQueriesItem: {
            flow: components["schemas"]["GetQueryStatsResultStatsGuideQueriesQueriesItemFlow"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Group Id */
            group_id: string | null;
            /** Is Helpful */
            is_helpful: boolean | null;
            /** Query */
            query: string;
            status: components["schemas"]["LayupAutomationQueryStatus"];
            /** Tags */
            tags: string | null;
            type: components["schemas"]["LayupAutomationQueryType"];
            /** User Id */
            user_id: string | null;
        };
        /** GetQueryStatsResultStatsGuideQueriesQueriesItemFlow */
        GetQueryStatsResultStatsGuideQueriesQueriesItemFlow: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
            status: components["schemas"]["db__queries__query__get_query_stats_async_edgeql__LayupAutomationGuidanceFlowStatus"];
        };
        /** GetQueryStatsResultStatsOnboardingQueries */
        GetQueryStatsResultStatsOnboardingQueries: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Queries */
            queries: components["schemas"]["GetQueryStatsResultStatsOnboardingQueriesQueriesItem"][];
            /** Total */
            total: number;
            /** Today */
            today: number;
        };
        /** GetQueryStatsResultStatsOnboardingQueriesQueriesItem */
        GetQueryStatsResultStatsOnboardingQueriesQueriesItem: {
            flow: components["schemas"]["GetQueryStatsResultStatsOnboardingQueriesQueriesItemFlow"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            status: components["schemas"]["LayupAutomationOnboardingFlowStatus"] | null;
        };
        /** GetQueryStatsResultStatsOnboardingQueriesQueriesItemFlow */
        GetQueryStatsResultStatsOnboardingQueriesQueriesItemFlow: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
            status: components["schemas"]["db__queries__query__get_query_stats_async_edgeql__LayupAutomationGuidanceFlowStatus"];
        };
        /** GetRoleByIdResult */
        GetRoleByIdResult: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Identifier */
            identifier: string;
            /** Name */
            name: string;
            last_modified_by: components["schemas"]["GetRoleByIdResultLastModifiedBy"] | null;
            deleted_by: components["schemas"]["GetRoleByIdResultLastModifiedBy"] | null;
            platform: components["schemas"]["GetRoleByIdResultPlatform"];
            /** Subscription Plans */
            subscription_plans: components["schemas"]["GetRoleByIdResultSubscriptionPlansItem"][];
        };
        /** GetRoleByIdResultLastModifiedBy */
        GetRoleByIdResultLastModifiedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** GetRoleByIdResultPlatform */
        GetRoleByIdResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** GetRoleByIdResultSubscriptionPlansItem */
        GetRoleByIdResultSubscriptionPlansItem: {
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Active */
            is_active: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Identifier */
            identifier: string;
            /** Deleted At */
            deleted_at: string | null;
        };
        /** GetRolesByPlatformIdResult */
        GetRolesByPlatformIdResult: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Identifier */
            identifier: string;
            /** Name */
            name: string;
            last_modified_by: components["schemas"]["GetRolesByPlatformIdResultLastModifiedBy"] | null;
            deleted_by: components["schemas"]["GetRolesByPlatformIdResultLastModifiedBy"] | null;
            platform: components["schemas"]["GetRolesByPlatformIdResultPlatform"];
            /** Subscription Plans */
            subscription_plans: components["schemas"]["GetRolesByPlatformIdResultSubscriptionPlansItem"][];
        };
        /** GetRolesByPlatformIdResultLastModifiedBy */
        GetRolesByPlatformIdResultLastModifiedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** GetRolesByPlatformIdResultPlatform */
        GetRolesByPlatformIdResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** GetRolesByPlatformIdResultSubscriptionPlansItem */
        GetRolesByPlatformIdResultSubscriptionPlansItem: {
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Active */
            is_active: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Identifier */
            identifier: string;
            /** Deleted At */
            deleted_at: string | null;
        };
        /** GetSubscriptionPlanByIdResult */
        GetSubscriptionPlanByIdResult: {
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Active */
            is_active: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Identifier */
            identifier: string;
            /** Deleted At */
            deleted_at: string | null;
            deleted_by: components["schemas"]["GetSubscriptionPlanByIdResultDeletedBy"] | null;
            platform: components["schemas"]["GetSubscriptionPlanByIdResultPlatform"];
            last_modified_by: components["schemas"]["GetSubscriptionPlanByIdResultDeletedBy"] | null;
            /** Roles */
            roles: components["schemas"]["GetSubscriptionPlanByIdResultRolesItem"][];
        };
        /** GetSubscriptionPlanByIdResultDeletedBy */
        GetSubscriptionPlanByIdResultDeletedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** GetSubscriptionPlanByIdResultPlatform */
        GetSubscriptionPlanByIdResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** GetSubscriptionPlanByIdResultRolesItem */
        GetSubscriptionPlanByIdResultRolesItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Identifier */
            identifier: string;
            /** Name */
            name: string;
        };
        /** GetSubscriptionPlansByPlatformIdResult */
        GetSubscriptionPlansByPlatformIdResult: {
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Active */
            is_active: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Identifier */
            identifier: string;
            /** Deleted At */
            deleted_at: string | null;
            deleted_by: components["schemas"]["GetSubscriptionPlansByPlatformIdResultDeletedBy"] | null;
            platform: components["schemas"]["GetSubscriptionPlansByPlatformIdResultPlatform"];
            last_modified_by: components["schemas"]["GetSubscriptionPlansByPlatformIdResultDeletedBy"] | null;
            /** Roles */
            roles: components["schemas"]["GetSubscriptionPlansByPlatformIdResultRolesItem"][];
        };
        /** GetSubscriptionPlansByPlatformIdResultDeletedBy */
        GetSubscriptionPlansByPlatformIdResultDeletedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** GetSubscriptionPlansByPlatformIdResultPlatform */
        GetSubscriptionPlansByPlatformIdResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** GetSubscriptionPlansByPlatformIdResultRolesItem */
        GetSubscriptionPlansByPlatformIdResultRolesItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Identifier */
            identifier: string;
            /** Name */
            name: string;
        };
        /** GetTemplateAnnouncementResult */
        GetTemplateAnnouncementResult: {
            flow: components["schemas"]["GetTemplateAnnouncementResultFlow"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string;
            /** From Date */
            from_date: string | null;
            /** Image */
            image: string | null;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateAnnouncementStage"] | null;
            /** Title */
            title: string;
            /** To Date */
            to_date: string | null;
        };
        /** GetTemplateAnnouncementResultFlow */
        GetTemplateAnnouncementResultFlow: {
            /** Steps */
            steps: components["schemas"]["GetTemplateAnnouncementResultFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__announcement__get_template_announcement_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetTemplateAnnouncementResultFlowStepsItem */
        GetTemplateAnnouncementResultFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetTemplateAnnouncementsByPlatformIdResult */
        GetTemplateAnnouncementsByPlatformIdResult: {
            flow: components["schemas"]["GetTemplateAnnouncementsByPlatformIdResultFlow"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string;
            /** From Date */
            from_date: string | null;
            /** Image */
            image: string | null;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateAnnouncementStage"] | null;
            /** Title */
            title: string;
            /** To Date */
            to_date: string | null;
        };
        /** GetTemplateAnnouncementsByPlatformIdResultFlow */
        GetTemplateAnnouncementsByPlatformIdResultFlow: {
            /** Steps */
            steps: components["schemas"]["GetTemplateAnnouncementsByPlatformIdResultFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__announcement__get_template_announcements_by_platform_id_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetTemplateAnnouncementsByPlatformIdResultFlowStepsItem */
        GetTemplateAnnouncementsByPlatformIdResultFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetTemplateAnnouncementsWithStatsResult */
        GetTemplateAnnouncementsWithStatsResult: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Announcements */
            announcements: components["schemas"]["GetTemplateAnnouncementsWithStatsResultAnnouncementsItem"][];
            stats: components["schemas"]["GetTemplateAnnouncementsWithStatsResultStats"];
        };
        /** GetTemplateAnnouncementsWithStatsResultAnnouncementsItem */
        GetTemplateAnnouncementsWithStatsResultAnnouncementsItem: {
            audience: components["schemas"]["GetTemplateAnnouncementsWithStatsResultAnnouncementsItemAudience"] | null;
            flow: components["schemas"]["GetTemplateAnnouncementsWithStatsResultAnnouncementsItemFlow"] | null;
            /** Total Count */
            total_count: number;
            /** Total Not Started Count */
            total_not_started_count: number;
            /** Total Seen Count */
            total_seen_count: number;
            /** Total Started Count */
            total_started_count: number;
            /** Total Completed Count */
            total_completed_count: number;
            /** Total */
            total: components["schemas"]["GetTemplateAnnouncementsWithStatsResultAnnouncementsItemTotalItem"][];
            /** Total Not Started */
            total_not_started: components["schemas"]["GetTemplateAnnouncementsWithStatsResultAnnouncementsItemTotalItem"][];
            /** Total Seen */
            total_seen: components["schemas"]["GetTemplateAnnouncementsWithStatsResultAnnouncementsItemTotalItem"][];
            /** Total Started */
            total_started: components["schemas"]["GetTemplateAnnouncementsWithStatsResultAnnouncementsItemTotalItem"][];
            /** Total Completed */
            total_completed: components["schemas"]["GetTemplateAnnouncementsWithStatsResultAnnouncementsItemTotalItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string;
            /** From Date */
            from_date: string | null;
            /** Image */
            image: string | null;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateAnnouncementStage"] | null;
            /** Title */
            title: string;
            /** To Date */
            to_date: string | null;
        };
        /** GetTemplateAnnouncementsWithStatsResultAnnouncementsItemAudience */
        GetTemplateAnnouncementsWithStatsResultAnnouncementsItemAudience: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
        };
        /** GetTemplateAnnouncementsWithStatsResultAnnouncementsItemFlow */
        GetTemplateAnnouncementsWithStatsResultAnnouncementsItemFlow: {
            /** Steps */
            steps: components["schemas"]["GetTemplateAnnouncementsWithStatsResultAnnouncementsItemFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__announcement__get_template_announcements_with_stats_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetTemplateAnnouncementsWithStatsResultAnnouncementsItemFlowStepsItem */
        GetTemplateAnnouncementsWithStatsResultAnnouncementsItemFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetTemplateAnnouncementsWithStatsResultAnnouncementsItemTotalItem */
        GetTemplateAnnouncementsWithStatsResultAnnouncementsItemTotalItem: {
            status: components["schemas"]["LayupAutomationAnnouncementStatus"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
        };
        /** GetTemplateAnnouncementsWithStatsResultStats */
        GetTemplateAnnouncementsWithStatsResultStats: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            seen_announcements: components["schemas"]["GetTemplateAnnouncementsWithStatsResultStatsSeenAnnouncements"];
            in_progress_announcements: components["schemas"]["GetTemplateAnnouncementsWithStatsResultStatsSeenAnnouncements"];
            not_started_announcements: components["schemas"]["GetTemplateAnnouncementsWithStatsResultStatsSeenAnnouncements"];
            completed_announcements: components["schemas"]["GetTemplateAnnouncementsWithStatsResultStatsSeenAnnouncements"];
        };
        /** GetTemplateAnnouncementsWithStatsResultStatsSeenAnnouncements */
        GetTemplateAnnouncementsWithStatsResultStatsSeenAnnouncements: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Announcements */
            announcements: components["schemas"]["GetTemplateAnnouncementsWithStatsResultAnnouncementsItemTotalItem"][];
            /** Total */
            total: number;
            /** Today */
            today: number;
        };
        /** GetTemplateOnboardingFlowsResult */
        GetTemplateOnboardingFlowsResult: {
            flow: components["schemas"]["GetTemplateOnboardingFlowsResultFlow"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Image */
            image: string | null;
            /** Index */
            index: number;
            /** Title */
            title: string;
        };
        /** GetTemplateOnboardingFlowsResultFlow */
        GetTemplateOnboardingFlowsResultFlow: {
            /** Steps */
            steps: components["schemas"]["GetTemplateOnboardingFlowsResultFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__onboarding__get_template_onboarding_flows_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** GetTemplateOnboardingFlowsResultFlowStepsItem */
        GetTemplateOnboardingFlowsResultFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetTemplateOnboardingFlowsWithStatsResult */
        GetTemplateOnboardingFlowsWithStatsResult: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Onboardings */
            onboardings: components["schemas"]["GetTemplateOnboardingFlowsWithStatsResultOnboardingsItem"][];
            stats: components["schemas"]["GetTemplateOnboardingFlowsWithStatsResultStats"];
        };
        /** GetTemplateOnboardingFlowsWithStatsResultOnboardingsItem */
        GetTemplateOnboardingFlowsWithStatsResultOnboardingsItem: {
            /** Total Count */
            total_count: number;
            /** Not Started */
            not_started: number;
            /** In Progress */
            in_progress: number;
            /** Completed */
            completed: number;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Image */
            image: string | null;
            /** Index */
            index: number;
            /** Title */
            title: string;
        };
        /** GetTemplateOnboardingFlowsWithStatsResultStats */
        GetTemplateOnboardingFlowsWithStatsResultStats: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            not_started_onboardings: components["schemas"]["GetTemplateOnboardingFlowsWithStatsResultStatsNotStartedOnboardings"];
            in_progress_onboardings: components["schemas"]["GetTemplateOnboardingFlowsWithStatsResultStatsNotStartedOnboardings"];
            completed_onboardings: components["schemas"]["GetTemplateOnboardingFlowsWithStatsResultStatsNotStartedOnboardings"];
        };
        /** GetTemplateOnboardingFlowsWithStatsResultStatsNotStartedOnboardings */
        GetTemplateOnboardingFlowsWithStatsResultStatsNotStartedOnboardings: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Onboardings */
            onboardings: components["schemas"]["GetTemplateOnboardingFlowsWithStatsResultStatsNotStartedOnboardingsOnboardingsItem"][];
            /** Total */
            total: number;
            /** Today */
            today: number;
        };
        /** GetTemplateOnboardingFlowsWithStatsResultStatsNotStartedOnboardingsOnboardingsItem */
        GetTemplateOnboardingFlowsWithStatsResultStatsNotStartedOnboardingsOnboardingsItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            status: components["schemas"]["LayupAutomationOnboardingFlowStatus"] | null;
        };
        /** GetTemplateOnboardingPlanResult */
        GetTemplateOnboardingPlanResult: {
            /** Flows */
            flows: components["schemas"]["GetTemplateOnboardingPlanResultFlowsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateOnboardingPlanStage"] | null;
            /** Strict Order */
            strict_order: boolean | null;
        };
        /** GetTemplateOnboardingPlanResultFlowsItem */
        GetTemplateOnboardingPlanResultFlowsItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Image */
            image: string | null;
            /** Index */
            index: number;
            /** Title */
            title: string;
        };
        /** GetTemplateOnboardingPlansResult */
        GetTemplateOnboardingPlansResult: {
            audience: components["schemas"]["GetTemplateOnboardingPlansResultAudience"] | null;
            /** Flows */
            flows: components["schemas"]["GetTemplateOnboardingPlansResultFlowsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateOnboardingPlanStage"] | null;
            /** Strict Order */
            strict_order: boolean | null;
        };
        /** GetTemplateOnboardingPlansResultAudience */
        GetTemplateOnboardingPlansResultAudience: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
        };
        /** GetTemplateOnboardingPlansResultFlowsItem */
        GetTemplateOnboardingPlansResultFlowsItem: {
            /** Steps */
            steps: components["schemas"]["GetTemplateOnboardingPlansResultFlowsItemStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Image */
            image: string | null;
            /** Index */
            index: number;
            /** Title */
            title: string;
        };
        /** GetTemplateOnboardingPlansResultFlowsItemStepsItem */
        GetTemplateOnboardingPlansResultFlowsItemStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** GetThemeByPlatformResult */
        GetThemeByPlatformResult: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Border Radius */
            border_radius: number | null;
            /** Colors */
            colors: string | null;
            /** Font Family */
            font_family: string | null;
            /** Font Sizes */
            font_sizes: string | null;
            guidance_tone: components["schemas"]["LayupAutomationGuidanceTone"] | null;
            /** Icons */
            icons: string | null;
            widget_position: components["schemas"]["LayupAutomationWidgetPosition"] | null;
            widget_variant: components["schemas"]["LayupAutomationWidgetVariant"] | null;
        };
        /** GetTopThreeQueriesByPlatformResult */
        GetTopThreeQueriesByPlatformResult: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            flow: components["schemas"]["GetTopThreeQueriesByPlatformResultFlow"];
            /** Query Count */
            query_count: number;
        };
        /** GetTopThreeQueriesByPlatformResultFlow */
        GetTopThreeQueriesByPlatformResultFlow: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
            status: components["schemas"]["db__queries__query__get_top_three_queries_by_platform_async_edgeql__LayupAutomationGuidanceFlowStatus"];
        };
        /** GuidanceFlowCreate */
        GuidanceFlowCreate: {
            /** Name */
            name: string;
            /** Source */
            source?: string | null;
            /** @default Pending */
            flow_status: components["schemas"]["LayupAutomationGuidanceFlowStatus-Input"];
            /** Description */
            description?: string | null;
            /**
             * Steps
             * @default []
             */
            steps: Record<string, never>[];
            /** Category */
            category?: string | null;
            /** Starting Url */
            starting_url?: string | null;
            /** Instructions */
            instructions?: string | null;
            /** Expected Outcome */
            expected_outcome?: string | null;
            /** Credentials Ids */
            credentials_ids: string[];
        };
        /** GuidanceFlowUpdate */
        GuidanceFlowUpdate: {
            /** Name */
            name?: string | null;
            /** Category */
            category?: string | null;
            /** Starting Url */
            starting_url?: string | null;
            /** Credentials Ids */
            credentials_ids?: string[] | null;
            /** Instructions */
            instructions?: string | null;
            /** Expected Outcome */
            expected_outcome?: string | null;
            flow_status?: components["schemas"]["LayupAutomationGuidanceFlowStatus-Input"] | null;
            /** Steps */
            steps?: Record<string, never>[] | null;
            /** Description */
            description?: string | null;
        };
        /** GuidanceStepUpdate */
        GuidanceStepUpdate: {
            /** Title */
            title?: string | null;
            /** Message */
            message?: string | null;
            /** Url */
            url?: string | null;
            /** Wait For Input */
            wait_for_input?: boolean | null;
            /** Tips */
            tips?: Record<string, never>[] | null;
            /** Highlight */
            highlight?: boolean | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** InitializeUser */
        InitializeUser: {
            /** User Id */
            user_id: string;
            /** Group Id */
            group_id?: string | null;
        };
        /** InitializeUserDataResult */
        InitializeUserDataResult: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            onboarding_plan: components["schemas"]["InitializeUserDataResultOnboardingPlan"];
            /** Announcements */
            announcements: components["schemas"]["InitializeUserDataResultAnnouncementsItem"][];
        };
        /** InitializeUserDataResultAnnouncementsItem */
        InitializeUserDataResultAnnouncementsItem: {
            template_announcement: components["schemas"]["InitializeUserDataResultAnnouncementsItemTemplateAnnouncement"];
            state: components["schemas"]["InitializeUserDataResultAnnouncementsItemState"] | null;
            /** User Id */
            user_id: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** InitializeUserDataResultAnnouncementsItemState */
        InitializeUserDataResultAnnouncementsItemState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationAnnouncementStatus"] | null;
        };
        /** InitializeUserDataResultAnnouncementsItemTemplateAnnouncement */
        InitializeUserDataResultAnnouncementsItemTemplateAnnouncement: {
            flow: components["schemas"]["InitializeUserDataResultOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlow"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string;
            /** From Date */
            from_date: string | null;
            /** Image */
            image: string | null;
            /** Open On Login */
            open_on_login: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateAnnouncementStage"] | null;
            /** Title */
            title: string;
            /** To Date */
            to_date: string | null;
        };
        /** InitializeUserDataResultOnboardingPlan */
        InitializeUserDataResultOnboardingPlan: {
            /** Onboarding Flows */
            onboarding_flows: components["schemas"]["InitializeUserDataResultOnboardingPlanOnboardingFlowsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** User Id */
            user_id: string | null;
        };
        /** InitializeUserDataResultOnboardingPlanOnboardingFlowsItem */
        InitializeUserDataResultOnboardingPlanOnboardingFlowsItem: {
            template_onboarding_flow: components["schemas"]["InitializeUserDataResultOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlow"];
            state: components["schemas"]["InitializeUserDataResultOnboardingPlanOnboardingFlowsItemState"] | null;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
        };
        /** InitializeUserDataResultOnboardingPlanOnboardingFlowsItemState */
        InitializeUserDataResultOnboardingPlanOnboardingFlowsItemState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationOnboardingFlowStatus"] | null;
        };
        /** InitializeUserDataResultOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlow */
        InitializeUserDataResultOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlow: {
            flow: components["schemas"]["InitializeUserDataResultOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlow"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Image */
            image: string | null;
            /** Index */
            index: number;
            /** Title */
            title: string;
        };
        /** InitializeUserDataResultOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlow */
        InitializeUserDataResultOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlow: {
            /** Steps */
            steps: components["schemas"]["InitializeUserDataResultOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__platform__user__initialize_user_data_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** InitializeUserDataResultOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem */
        InitializeUserDataResultOnboardingPlanOnboardingFlowsItemTemplateOnboardingFlowFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /**
         * LayupAutomationAnnouncementStatus
         * @enum {string}
         */
        LayupAutomationAnnouncementStatus: "Seen" | "NotStarted" | "InProgress" | "Completed";
        /**
         * LayupAutomationGuidanceFlowSource
         * @enum {string}
         */
        LayupAutomationGuidanceFlowSource: "LayupDefined" | "UserQuery" | "LayupExtension";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        "LayupAutomationGuidanceFlowStatus-Input": "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceStepType
         * @enum {string}
         */
        LayupAutomationGuidanceStepType: "Click" | "Type";
        /**
         * LayupAutomationGuidanceTone
         * @enum {string}
         */
        LayupAutomationGuidanceTone: "Friendly" | "Professional" | "Formal";
        /**
         * LayupAutomationOnboardingFlowStatus
         * @enum {string}
         */
        LayupAutomationOnboardingFlowStatus: "NotStarted" | "InProgress" | "Completed";
        /**
         * LayupAutomationPlatformKnowledgeSourceStatus
         * @enum {string}
         */
        LayupAutomationPlatformKnowledgeSourceStatus: "Processing" | "Processed" | "Failed";
        /**
         * LayupAutomationPlatformKnowledgeSourceType
         * @enum {string}
         */
        LayupAutomationPlatformKnowledgeSourceType: "Website" | "Document";
        /**
         * LayupAutomationQueryStatus
         * @enum {string}
         */
        LayupAutomationQueryStatus: "InProgress" | "Completed" | "Failed" | "Created" | "Engaged" | "NoGuideAvailable";
        /**
         * LayupAutomationQueryType
         * @enum {string}
         */
        LayupAutomationQueryType: "Guide" | "Announcement" | "Onboarding";
        /**
         * LayupAutomationTemplateAnnouncementStage
         * @enum {string}
         */
        LayupAutomationTemplateAnnouncementStage: "Draft" | "Active" | "Archived";
        /**
         * LayupAutomationTemplateOnboardingPlanStage
         * @enum {string}
         */
        LayupAutomationTemplateOnboardingPlanStage: "Draft" | "Active" | "Archived";
        /**
         * LayupAutomationWidgetPosition
         * @enum {string}
         */
        LayupAutomationWidgetPosition: "TopLeft" | "TopRight" | "BottomLeft" | "BottomRight" | "BottomCenter" | "TopCenter";
        /**
         * LayupAutomationWidgetVariant
         * @enum {string}
         */
        LayupAutomationWidgetVariant: "Compact" | "Modal" | "Sidebar";
        /** OnboardingFlowCreate */
        OnboardingFlowCreate: {
            /** Title */
            title: string;
            /** Description */
            description?: string | null;
            /** Image */
            image?: string | null;
            /** Plan Id */
            plan_id?: string | null;
            /**
             * Flow Id
             * Format: uuid
             */
            flow_id: string;
            /** Index */
            index: number;
        };
        /** OnboardingFlowUpdate */
        OnboardingFlowUpdate: {
            /** Title */
            title?: string | null;
            /** Description */
            description?: string | null;
            /** Image */
            image?: string | null;
            /** Index */
            index?: number | null;
        };
        /** OnboardingPlanCreate */
        OnboardingPlanCreate: {
            /** Name */
            name: string;
            /** Strict Order */
            strict_order: boolean;
            /**
             * Platform Id
             * Format: uuid
             */
            platform_id: string;
            /** User Id */
            user_id: string;
        };
        /** OnboardingPlanFromTemplateCreate */
        OnboardingPlanFromTemplateCreate: {
            /** User Id */
            user_id: string;
        };
        /** OnboardingPlanUpdate */
        OnboardingPlanUpdate: {
            /** Name */
            name?: string | null;
            /** Strict Order */
            strict_order?: boolean | null;
        };
        /** PermissionsContext */
        PermissionsContext: {
            /** User Id */
            user_id?: string | null;
            /** Group Id */
            group_id?: string | null;
        };
        /** PlatformContextCreate */
        PlatformContextCreate: {
            /** Mappings */
            mappings?: Record<string, never>[] | null;
            /** Knowledge Base Config */
            knowledge_base_config?: Record<string, never> | null;
        };
        /** PlatformContextUpdate */
        PlatformContextUpdate: {
            /** Mappings */
            mappings?: Record<string, never>[] | null;
            /** Knowledge Base Config */
            knowledge_base_config?: Record<string, never> | null;
        };
        /** PlatformCreate */
        PlatformCreate: {
            /** Name */
            name: string;
            context: components["schemas"]["PlatformContextCreate"];
            user_whitelist: components["schemas"]["PlatformUserWhitelistCreate"];
            /** Audience List */
            audience_list?: string[] | null;
            /** Metadata */
            metadata?: Record<string, never> | null;
            template_onboarding_plan: components["schemas"]["handlers__automation__platform__TemplateOnboardingPlanCreate"];
        };
        /** PlatformCredentialsCreate */
        PlatformCredentialsCreate: {
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Role Id
             * Format: uuid
             */
            role_id: string;
            /**
             * Subscription Plan Id
             * Format: uuid
             */
            subscription_plan_id: string;
        };
        /** PlatformCredentialsUpdate */
        PlatformCredentialsUpdate: {
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Role Id
             * Format: uuid
             */
            role_id: string;
        };
        /** PlatformUserWhitelistCreate */
        PlatformUserWhitelistCreate: {
            /** User Ids */
            user_ids?: string[] | null;
        };
        /** RecordFlow */
        RecordFlow: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Description */
            description: string;
            /** Context */
            context: string;
            /** Steps */
            steps: components["schemas"]["RecordStep"][];
            /** Status */
            status: string;
            /** User Id */
            user_id?: string | null;
        };
        /** RecordStep */
        RecordStep: {
            /** Id */
            id: string;
            /** Index */
            index: number;
            /** Flow Id */
            flow_id: string;
            /** Type */
            type: string;
            element: components["schemas"]["StepElement"];
            /** Page Html */
            page_html: string;
            /** Url */
            url: string;
            /** Timestamp */
            timestamp: number;
            /** Context */
            context?: string | null;
            /** Generic */
            generic?: boolean | null;
        };
        /** RoleCreate */
        RoleCreate: {
            /** Name */
            name: string;
            /** Identifier */
            identifier: string;
            /** Subscription Plan Ids */
            subscription_plan_ids: string[];
        };
        /** RoleUpdate */
        RoleUpdate: {
            /** Name */
            name: string;
            /** Identifier */
            identifier: string;
            /** Subscription Plan Ids */
            subscription_plan_ids: string[];
        };
        /** Source */
        Source: {
            /** Type */
            type?: string | null;
            /** Title */
            title?: string | null;
            /** Url */
            url?: string | null;
            /** Page */
            page?: string | null;
            /** Content */
            content?: string | null;
        };
        /** StepElement */
        StepElement: {
            /** Text Content */
            text_content?: string | null;
            /** Value */
            value?: string | null;
            /** Xpath */
            xpath: string;
            /** Attributes */
            attributes?: Record<string, never> | null;
            /** Element Html */
            element_html: string;
        };
        /** SubscriptionPlanCreate */
        SubscriptionPlanCreate: {
            /** Name */
            name: string;
            /** Identifier */
            identifier: string;
        };
        /** SubscriptionPlanUpdate */
        SubscriptionPlanUpdate: {
            /** Name */
            name: string;
            /** Identifier */
            identifier: string;
        };
        /** TemplateAnnouncementCreate */
        TemplateAnnouncementCreate: {
            /** Title */
            title: string;
            /** Description */
            description: string;
            /** Image */
            image?: string | null;
            /** Flow Id */
            flow_id?: string | null;
            /** To Date */
            to_date?: string | null;
            /** From Date */
            from_date?: string | null;
            /** Audience Name */
            audience_name: string;
            /** Open On Login */
            open_on_login?: boolean | null;
        };
        /** TemplateAnnouncementStageUpdate */
        TemplateAnnouncementStageUpdate: {
            /** Stage */
            stage: string;
        };
        /** TemplateAnnouncementUpdate */
        TemplateAnnouncementUpdate: {
            /** Title */
            title?: string | null;
            /** Description */
            description?: string | null;
            /** Image */
            image?: string | null;
            /** Flow Id */
            flow_id?: string | null;
            /** To Date */
            to_date?: string | null;
            /** From Date */
            from_date?: string | null;
            /** Audience Name */
            audience_name: string;
            /** Stage */
            stage?: string | null;
            /** Open On Login */
            open_on_login?: boolean | null;
        };
        /** TemplateOnboardingFlowCreate */
        TemplateOnboardingFlowCreate: {
            /** Title */
            title: string;
            /** Description */
            description?: string | null;
            /** Image */
            image?: string | null;
            /** Plan Id */
            plan_id?: string | null;
            /**
             * Flow Id
             * Format: uuid
             */
            flow_id: string;
            /** Index */
            index: number;
        };
        /** TemplateOnboardingFlowUpdate */
        TemplateOnboardingFlowUpdate: {
            /** Title */
            title?: string | null;
            /** Description */
            description?: string | null;
            /** Image */
            image?: string | null;
            /** Index */
            index?: number | null;
        };
        /** TemplateOnboardingPlanStageUpdate */
        TemplateOnboardingPlanStageUpdate: {
            /** Stage */
            stage: string;
        };
        /** TemplateOnboardingPlanUpdate */
        TemplateOnboardingPlanUpdate: {
            /** Name */
            name?: string | null;
            /** Strict Order */
            strict_order?: boolean | null;
            /** Audience Name */
            audience_name: string;
            /** Open On Login */
            open_on_login?: boolean | null;
        };
        /** ThemeCreate */
        ThemeCreate: {
            /** Icons */
            icons: Record<string, never>;
            /** Guidance Tone */
            guidance_tone: string;
            /** Font Family */
            font_family: string | null;
            /** Border Radius */
            border_radius: number;
            /** Widget Position */
            widget_position: string;
            /** Font Sizes */
            font_sizes: Record<string, never>;
            /** Colors */
            colors: Record<string, never>;
            /** Widget Variant */
            widget_variant: string;
        };
        /** ThemeUpdate */
        ThemeUpdate: {
            /** Icons */
            icons?: Record<string, never> | null;
            /** Guidance Tone */
            guidance_tone?: string | null;
            /** Font Family */
            font_family?: string | null;
            /** Border Radius */
            border_radius?: number | null;
            /** Widget Position */
            widget_position?: string | null;
            /** Font Sizes */
            font_sizes?: Record<string, never> | null;
            /** Colors */
            colors?: Record<string, never> | null;
            /** Widget Variant */
            widget_variant?: string | null;
        };
        /** TogglePlatformVisibility */
        TogglePlatformVisibility: {
            /** Is Open To Public */
            is_open_to_public: boolean;
        };
        /** TogglePlatformVisibilityResult */
        TogglePlatformVisibilityResult: {
            /** Docsbot Id */
            docsbot_id: string | null;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Name */
            name: string;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Display Name */
            display_name: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** TriggerGuidanceFlowLoad */
        TriggerGuidanceFlowLoad: {
            /**
             * Guidance Flow Id
             * Format: uuid
             */
            guidance_flow_id: string;
        };
        /** UpdateAnnouncementResult */
        UpdateAnnouncementResult: {
            state: components["schemas"]["UpdateAnnouncementResultState"] | null;
            /** User Id */
            user_id: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** UpdateAnnouncementResultState */
        UpdateAnnouncementResultState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationAnnouncementStatus"] | null;
        };
        /** UpdateAnnouncementStatus */
        UpdateAnnouncementStatus: {
            /** Status */
            status: string;
            /** User Id */
            user_id: string;
        };
        /** UpdateApiKeyResult */
        UpdateApiKeyResult: {
            /** Name */
            name: string;
            /** Key Id */
            key_id: string | null;
            /** Expires At */
            expires_at: string | null;
            /** Key */
            key: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** UpdateAudienceResult */
        UpdateAudienceResult: {
            /** Name */
            name: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** UpdateGuidanceFlowResult */
        UpdateGuidanceFlowResult: {
            /** Steps */
            steps: components["schemas"]["UpdateGuidanceFlowResultStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__guidance_flow__update_guidance_flow_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** UpdateGuidanceFlowResultStepsItem */
        UpdateGuidanceFlowResultStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** UpdateGuidanceStepResult */
        UpdateGuidanceStepResult: {
            /** Context */
            context: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
            /** Selection Criteria */
            selection_criteria: string | null;
            /** Index */
            index: number;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** UpdateKnowledgeSource */
        UpdateKnowledgeSource: {
            /** Is Disabled */
            is_disabled?: boolean | null;
            /** Name */
            name?: string | null;
            /** Description */
            description?: string | null;
        };
        /** UpdateOnboardingFlowResult */
        UpdateOnboardingFlowResult: {
            state: components["schemas"]["UpdateOnboardingFlowResultState"] | null;
            template_onboarding_flow: components["schemas"]["UpdateOnboardingFlowResultTemplateOnboardingFlow"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
        };
        /** UpdateOnboardingFlowResultState */
        UpdateOnboardingFlowResultState: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            status: components["schemas"]["LayupAutomationOnboardingFlowStatus"] | null;
        };
        /** UpdateOnboardingFlowResultTemplateOnboardingFlow */
        UpdateOnboardingFlowResultTemplateOnboardingFlow: {
            flow: components["schemas"]["UpdateOnboardingFlowResultTemplateOnboardingFlowFlow"];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Description */
            description: string | null;
            /** Image */
            image: string | null;
            /** Index */
            index: number;
            /** Title */
            title: string;
        };
        /** UpdateOnboardingFlowResultTemplateOnboardingFlowFlow */
        UpdateOnboardingFlowResultTemplateOnboardingFlowFlow: {
            /** Steps */
            steps: components["schemas"]["UpdateOnboardingFlowResultTemplateOnboardingFlowFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__onboarding__update_onboarding_flow_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** UpdateOnboardingFlowResultTemplateOnboardingFlowFlowStepsItem */
        UpdateOnboardingFlowResultTemplateOnboardingFlowFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** UpdateOnboardingFlowStatus */
        UpdateOnboardingFlowStatus: {
            /** Status */
            status: string;
            /** User Id */
            user_id: string;
        };
        /** UpdateOnboardingPlanResult */
        UpdateOnboardingPlanResult: {
            /** User Id */
            user_id: string | null;
            /** Strict Order */
            strict_order: boolean | null;
            /** Name */
            name: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            platform: components["schemas"]["UpdateOnboardingPlanResultPlatform"];
            deleted_by: components["schemas"]["UpdateOnboardingPlanResultDeletedBy"] | null;
            last_modified_by: components["schemas"]["UpdateOnboardingPlanResultDeletedBy"] | null;
        };
        /** UpdateOnboardingPlanResultDeletedBy */
        UpdateOnboardingPlanResultDeletedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** UpdateOnboardingPlanResultPlatform */
        UpdateOnboardingPlanResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
        };
        /** UpdatePlatformByUserIdResult */
        UpdatePlatformByUserIdResult: {
            /** User Whitelist */
            user_whitelist: components["schemas"]["UpdatePlatformByUserIdResultUserWhitelistItem"][];
            /** Docsbot Id */
            docsbot_id: string | null;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Name */
            name: string;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Display Name */
            display_name: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** UpdatePlatformByUserIdResultUserWhitelistItem */
        UpdatePlatformByUserIdResultUserWhitelistItem: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** UpdatePlatformContextResult */
        UpdatePlatformContextResult: {
            /** Mappings */
            mappings: string | null;
            /** Knowledge Base Config */
            knowledge_base_config: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** UpdatePlatformCredentialsResult */
        UpdatePlatformCredentialsResult: {
            /** Password */
            password: string;
            /** Username */
            username: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            subscription_plan: components["schemas"]["UpdatePlatformCredentialsResultSubscriptionPlan"];
            role: components["schemas"]["UpdatePlatformCredentialsResultRole"];
            platform: components["schemas"]["UpdatePlatformCredentialsResultPlatform"];
            deleted_by: components["schemas"]["UpdatePlatformCredentialsResultDeletedBy"] | null;
            last_modified_by: components["schemas"]["UpdatePlatformCredentialsResultDeletedBy"] | null;
        };
        /** UpdatePlatformCredentialsResultDeletedBy */
        UpdatePlatformCredentialsResultDeletedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** UpdatePlatformCredentialsResultPlatform */
        UpdatePlatformCredentialsResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** UpdatePlatformCredentialsResultRole */
        UpdatePlatformCredentialsResultRole: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Identifier */
            identifier: string;
            /** Name */
            name: string;
        };
        /** UpdatePlatformCredentialsResultSubscriptionPlan */
        UpdatePlatformCredentialsResultSubscriptionPlan: {
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Active */
            is_active: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Identifier */
            identifier: string;
            /** Deleted At */
            deleted_at: string | null;
        };
        /** UpdatePlatformResult */
        UpdatePlatformResult: {
            /** Docsbot Id */
            docsbot_id: string | null;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Name */
            name: string;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Display Name */
            display_name: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** UpdateQuery */
        UpdateQuery: {
            /** Status */
            status: string;
        };
        /** UpdateRoleResult */
        UpdateRoleResult: {
            /** Name */
            name: string;
            /** Identifier */
            identifier: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Subscription Plans */
            subscription_plans: components["schemas"]["UpdateRoleResultSubscriptionPlansItem"][];
            platform: components["schemas"]["UpdateRoleResultPlatform"];
            deleted_by: components["schemas"]["UpdateRoleResultDeletedBy"] | null;
            last_modified_by: components["schemas"]["UpdateRoleResultDeletedBy"] | null;
        };
        /** UpdateRoleResultDeletedBy */
        UpdateRoleResultDeletedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** UpdateRoleResultPlatform */
        UpdateRoleResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** UpdateRoleResultSubscriptionPlansItem */
        UpdateRoleResultSubscriptionPlansItem: {
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            /** Name */
            name: string;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Active */
            is_active: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Deleted */
            is_deleted: boolean;
            /** Identifier */
            identifier: string;
            /** Deleted At */
            deleted_at: string | null;
        };
        /** UpdateSubscriptionPlanResult */
        UpdateSubscriptionPlanResult: {
            /** Deleted At */
            deleted_at: string | null;
            /** Identifier */
            identifier: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Metadata */
            metadata: string | null;
            /** Is Active */
            is_active: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /** Roles */
            roles: components["schemas"]["UpdateSubscriptionPlanResultRolesItem"][];
            last_modified_by: components["schemas"]["UpdateSubscriptionPlanResultLastModifiedBy"] | null;
            platform: components["schemas"]["UpdateSubscriptionPlanResultPlatform"];
            deleted_by: components["schemas"]["UpdateSubscriptionPlanResultLastModifiedBy"] | null;
        };
        /** UpdateSubscriptionPlanResultLastModifiedBy */
        UpdateSubscriptionPlanResultLastModifiedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** UpdateSubscriptionPlanResultPlatform */
        UpdateSubscriptionPlanResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** UpdateSubscriptionPlanResultRolesItem */
        UpdateSubscriptionPlanResultRolesItem: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Identifier */
            identifier: string;
            /** Name */
            name: string;
        };
        /** UpdateTemplateAnnouncementResult */
        UpdateTemplateAnnouncementResult: {
            /** To Date */
            to_date: string | null;
            /** Title */
            title: string;
            stage: components["schemas"]["LayupAutomationTemplateAnnouncementStage"] | null;
            /** Open On Login */
            open_on_login: boolean | null;
            /** Image */
            image: string | null;
            /** From Date */
            from_date: string | null;
            /** Description */
            description: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            platform: components["schemas"]["UpdateTemplateAnnouncementResultPlatform"];
            flow: components["schemas"]["UpdateTemplateAnnouncementResultFlow"] | null;
            audience: components["schemas"]["UpdateTemplateAnnouncementResultAudience"] | null;
            deleted_by: components["schemas"]["UpdateTemplateAnnouncementResultDeletedBy"] | null;
            last_modified_by: components["schemas"]["UpdateTemplateAnnouncementResultDeletedBy"] | null;
        };
        /** UpdateTemplateAnnouncementResultAudience */
        UpdateTemplateAnnouncementResultAudience: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
        };
        /** UpdateTemplateAnnouncementResultDeletedBy */
        UpdateTemplateAnnouncementResultDeletedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** UpdateTemplateAnnouncementResultFlow */
        UpdateTemplateAnnouncementResultFlow: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__announcement__update_template_announcement_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** UpdateTemplateAnnouncementResultPlatform */
        UpdateTemplateAnnouncementResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** UpdateTemplateOnboardingFlowResult */
        UpdateTemplateOnboardingFlowResult: {
            flow: components["schemas"]["UpdateTemplateOnboardingFlowResultFlow"];
            /** Title */
            title: string;
            /** Index */
            index: number;
            /** Image */
            image: string | null;
            /** Description */
            description: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** UpdateTemplateOnboardingFlowResultFlow */
        UpdateTemplateOnboardingFlowResultFlow: {
            /** Steps */
            steps: components["schemas"]["UpdateTemplateOnboardingFlowResultFlowStepsItem"][];
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Category */
            category: string | null;
            /** Description */
            description: string | null;
            /** Name */
            name: string;
            source: components["schemas"]["LayupAutomationGuidanceFlowSource"] | null;
            status: components["schemas"]["db__queries__onboarding__update_template_onboarding_flow_async_edgeql__LayupAutomationGuidanceFlowStatus"];
            /** Expected Outcome */
            expected_outcome: string | null;
            /** Instructions */
            instructions: string | null;
            /** Starting Url */
            starting_url: string | null;
        };
        /** UpdateTemplateOnboardingFlowResultFlowStepsItem */
        UpdateTemplateOnboardingFlowResultFlowStepsItem: {
            /** Context */
            context: string;
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Index */
            index: number;
            /** Selection Criteria */
            selection_criteria: string | null;
            type: components["schemas"]["LayupAutomationGuidanceStepType"];
        };
        /** UpdateTemplateOnboardingPlanResult */
        UpdateTemplateOnboardingPlanResult: {
            /** Strict Order */
            strict_order: boolean | null;
            stage: components["schemas"]["LayupAutomationTemplateOnboardingPlanStage"] | null;
            /** Open On Login */
            open_on_login: boolean | null;
            /** Name */
            name: string;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
            platform: components["schemas"]["UpdateTemplateOnboardingPlanResultPlatform"];
            audience: components["schemas"]["UpdateTemplateOnboardingPlanResultAudience"] | null;
            deleted_by: components["schemas"]["UpdateTemplateOnboardingPlanResultDeletedBy"] | null;
            last_modified_by: components["schemas"]["UpdateTemplateOnboardingPlanResultDeletedBy"] | null;
        };
        /** UpdateTemplateOnboardingPlanResultAudience */
        UpdateTemplateOnboardingPlanResultAudience: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Name */
            name: string;
        };
        /** UpdateTemplateOnboardingPlanResultDeletedBy */
        UpdateTemplateOnboardingPlanResultDeletedBy: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** External Id */
            external_id: string | null;
        };
        /** UpdateTemplateOnboardingPlanResultPlatform */
        UpdateTemplateOnboardingPlanResultPlatform: {
            /** Modified At */
            modified_at: string | null;
            /** Created At */
            created_at: string | null;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Is Deleted */
            is_deleted: boolean;
            /** Is Active */
            is_active: boolean;
            /** Deleted At */
            deleted_at: string | null;
            /** Metadata */
            metadata: string | null;
            /** Display Name */
            display_name: string | null;
            /** Is Open To Public */
            is_open_to_public: boolean | null;
            /** Name */
            name: string;
            /** Knowledge Used Count */
            knowledge_used_count: number | null;
            /** Docsbot Id */
            docsbot_id: string | null;
        };
        /** UpdateThemeResult */
        UpdateThemeResult: {
            widget_variant: components["schemas"]["LayupAutomationWidgetVariant"] | null;
            widget_position: components["schemas"]["LayupAutomationWidgetPosition"] | null;
            /** Icons */
            icons: string | null;
            guidance_tone: components["schemas"]["LayupAutomationGuidanceTone"] | null;
            /** Font Sizes */
            font_sizes: string | null;
            /** Font Family */
            font_family: string | null;
            /** Colors */
            colors: string | null;
            /** Border Radius */
            border_radius: number | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** UpdateUserWhitelistResult */
        UpdateUserWhitelistResult: {
            /** User Ids */
            user_ids: string | null;
            /** Group Ids */
            group_ids: string | null;
            /** Metadata */
            metadata: string | null;
            /** Deleted At */
            deleted_at: string | null;
            /** Is Active */
            is_active: boolean;
            /** Is Deleted */
            is_deleted: boolean;
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Created At */
            created_at: string | null;
            /** Modified At */
            modified_at: string | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__announcement__create_announcement_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__announcement__create_template_announcement_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__announcement__get_announcement_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__announcement__get_announcements_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__announcement__get_announcements_by_platform_user_id_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__announcement__get_template_announcement_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__announcement__get_template_announcements_by_platform_id_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__announcement__get_template_announcements_with_stats_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__announcement__update_template_announcement_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__guidance_flow__create_guidance_flow_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__guidance_flow__get_guidance_flow_by_id_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__guidance_flow__get_guidance_flows_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__guidance_flow__update_guidance_flow_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__onboarding__create_onboarding_flow_using_guidance_flow_async_edgeql__LayupAutomationGuidanceFlowStatus: "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__onboarding__create_template_onboarding_flow_using_guidance_flow_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__onboarding__get_onboarding_flows_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__onboarding__get_onboarding_plan_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__onboarding__get_onboarding_plan_by_platform_user_id_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__onboarding__get_onboarding_plans_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__onboarding__get_template_onboarding_flows_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__onboarding__update_onboarding_flow_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__onboarding__update_template_onboarding_flow_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__platform__user__initialize_user_data_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__query__get_queries_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__query__get_query_by_id_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__query__get_query_stats_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /**
         * LayupAutomationGuidanceFlowStatus
         * @enum {string}
         */
        db__queries__query__get_top_three_queries_by_platform_async_edgeql__LayupAutomationGuidanceFlowStatus: "Pending" | "Processing" | "Testing" | "Completed" | "Failed";
        /** GuidanceCreate */
        handlers__automation__guidance__GuidanceCreate: {
            /** Query */
            query: string;
            /** Messages */
            messages?: components["schemas"]["handlers__automation__guidance__Message"][] | null;
            /** User Id */
            user_id?: string | null;
            /** Group Id */
            group_id?: string | null;
        };
        /** Message */
        handlers__automation__guidance__Message: {
            /** Role */
            role: string;
            /** Content */
            content: string;
        };
        /** PlatformUpdate */
        handlers__automation__platform__PlatformUpdate: {
            /** Name */
            name?: string | null;
            context?: components["schemas"]["PlatformContextUpdate"] | null;
            user_whitelist?: components["schemas"]["handlers__automation__platform__PlatformUserWhitelistUpdate"] | null;
            /** Metadata */
            metadata?: Record<string, never> | null;
            /**
             * Should Merge Metadata
             * @default false
             */
            should_merge_metadata: boolean;
            /**
             * Should Merge User Whitelist Metadata
             * @default false
             */
            should_merge_user_whitelist_metadata: boolean;
        };
        /** PlatformUserWhitelistUpdate */
        handlers__automation__platform__PlatformUserWhitelistUpdate: {
            /** User Ids */
            user_ids?: string[] | null;
            /** Group Ids */
            group_ids?: string[] | null;
        };
        /** TemplateOnboardingPlanCreate */
        handlers__automation__platform__TemplateOnboardingPlanCreate: {
            /** Name */
            name: string;
            /**
             * Strict Order
             * @default false
             */
            strict_order: boolean | null;
            /** Metadata */
            metadata?: Record<string, never> | null;
        };
        /** GuidanceCreate */
        handlers__automation__platform__guidance__GuidanceCreate: {
            /** Id */
            id?: string | null;
            /** Query */
            query: string;
            /** Messages */
            messages?: components["schemas"]["handlers__automation__platform__guidance__Message"][] | null;
            /** User Id */
            user_id?: string | null;
            /** Group Id */
            group_id?: string | null;
            /** Current User Location */
            current_user_location?: string | null;
        };
        /** Message */
        handlers__automation__platform__guidance__Message: {
            /** Role */
            role?: string | null;
            /** Content */
            content?: string | null;
            /** Sources */
            sources?: components["schemas"]["Source"][] | null;
            /** Timestamp */
            timestamp?: string | null;
        };
        /** TemplateOnboardingPlanCreate */
        handlers__automation__platform__template_onboarding__TemplateOnboardingPlanCreate: {
            /** Name */
            name: string;
            /** Strict Order */
            strict_order: boolean;
            /**
             * Platform Id
             * Format: uuid
             */
            platform_id: string;
            /** Audience Name */
            audience_name: string;
            /** Open On Login */
            open_on_login?: boolean | null;
        };
        /** PlatformUpdate */
        handlers__user__platform__PlatformUpdate: {
            /** Name */
            name?: string | null;
            user_whitelist?: components["schemas"]["handlers__user__platform__PlatformUserWhitelistUpdate"] | null;
            /** Metadata */
            metadata?: Record<string, never> | null;
            /**
             * Should Merge Metadata
             * @default false
             */
            should_merge_metadata: boolean;
            /**
             * Should Merge User Whitelist Metadata
             * @default false
             */
            should_merge_user_whitelist_metadata: boolean;
        };
        /** PlatformUserWhitelistUpdate */
        handlers__user__platform__PlatformUserWhitelistUpdate: {
            /** User Ids */
            user_ids?: string[] | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_api_token_by_organization_management_api_keys_token_get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetApiKeyByOrganizationResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_api_key_management_api_keys__id__get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetApiKeyByIdResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_api_key_management_api_keys__id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    partial_update_api_key_management_api_keys__id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ApiKeyUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateApiKeyResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_api_key_management_api_keys_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ApiKeyCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateApiKeyResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_announcement_status_users_platforms_announcement__announcement_id__status_patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                announcement_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateAnnouncementStatus"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_onboarding_flow_status_users_platforms_onboarding_flow__flow_id__status_patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                flow_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateOnboardingFlowStatus"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_selected_onboarding_flow_from_template_onboarding_flow_id_users_platforms_onboarding_flow_get_selected_flow_get: {
        parameters: {
            query: {
                user_id: string;
                template_onboarding_flow_id: string;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    initialize_platform_user_data_users_platforms_initialize_data_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InitializeUser"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InitializeUserDataResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_platform_user_onboarding_plan_users_platforms_onboarding_plan_get: {
        parameters: {
            query: {
                platform_user_id: string;
                limit?: number | null;
                offset?: number | null;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetOnboardingPlanByPlatformUserIdResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_platform_user_announcements_users_platforms_announcements_get: {
        parameters: {
            query: {
                platform_user_id: string;
                limit?: number | null;
                offset?: number | null;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetAnnouncementsByPlatformUserIdResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    submit_feedback_users_platforms__platform_id__query_history_feedback_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FeedbackCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_query_history_users_platforms__platform_id__query_history_get: {
        parameters: {
            query: {
                user_id: string;
                group_id: string;
                limit?: number | null;
                offset?: number | null;
                query?: string | null;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_query_by_user_id_users_platforms__platform_id__query_history__query_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                query_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_query_users_platforms__platform_id__query_history__query_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                query_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateQuery"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    run_query_users_platforms__platform_id__query_history_run__query_id__post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                query_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_platforms_users_platforms_get: {
        parameters: {
            query?: {
                limit?: number | null;
                offset?: number | null;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    partial_update_platform_users_platforms__platform_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["handlers__user__platform__PlatformUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdatePlatformByUserIdResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    me_users_me_get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    handle_keycloak_user_event_webhooks_keycloak_user_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    handle_organization_webhook_webhooks_workos_organization_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    handle_firecrawl_job_event_webhooks_firecrawl_job__webhook_id__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                webhook_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    send_keycloak_email_emails_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    check_permissions_automation_permissions_post: {
        parameters: {
            query?: {
                return_platform?: boolean;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PermissionsContext"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_guidance_automation_guidance_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["handlers__automation__guidance__GuidanceCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_guidance_v3_automation_guidance_v3_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["handlers__automation__guidance__GuidanceCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_announcements_automation_platforms__platform_id__announcements_get: {
        parameters: {
            query?: {
                limit?: number | null;
                offset?: number | null;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetAnnouncementsResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_announcement_automation_platforms__platform_id__announcements_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AnnouncementCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateAnnouncementResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_announcement_automation_platforms__platform_id__announcements__announcement_id__get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                announcement_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetAnnouncementResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_announcement_automation_platforms__platform_id__announcements__announcement_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                announcement_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_announcement_automation_platforms__platform_id__announcements__announcement_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                announcement_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AnnouncementUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateAnnouncementResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_announcement_from_template_for_platform_user_automation_platforms__platform_id__announcements_from_template_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AnnouncementFromTemplateCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateAnnouncementResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_platform_guidance_automation_platforms_guidance_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["handlers__automation__platform__guidance__GuidanceCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_platform_guidance_automation_platforms_guidance_v3_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["handlers__automation__platform__guidance__GuidanceCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_guidance_step_automation_platforms__platform_id__guidance_flows__guidance_flow_id__steps__guidance_step_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
                guidance_flow_id: string;
                guidance_step_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GuidanceStepUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateGuidanceStepResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_guidance_flows_automation_platforms__platform_id__guidance_flows_get: {
        parameters: {
            query?: {
                name?: string | null;
                status?: components["schemas"]["LayupAutomationGuidanceFlowStatus-Input"] | null;
                is_active?: boolean | null;
                category?: string | null;
                limit?: number | null;
                offset?: number | null;
                include_context?: boolean;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetGuidanceFlowsResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_guidance_flow_automation_platforms__platform_id__guidance_flows_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GuidanceFlowCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateGuidanceFlowResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_guidance_flow_by_id_automation_platforms__platform_id__guidance_flows__guidance_flow_id__get: {
        parameters: {
            query?: {
                include_context?: boolean;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                guidance_flow_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetGuidanceFlowByIdResult"] | null;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_guidance_flow_automation_platforms__platform_id__guidance_flows__guidance_flow_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
                guidance_flow_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_guidance_flow_automation_platforms__platform_id__guidance_flows__guidance_flow_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
                guidance_flow_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GuidanceFlowUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateGuidanceFlowResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_guidance_flow_from_recording_automation_platforms__platform_id__guidance_flows_from_recording_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecordFlow"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_guidance_flow_from_agent_automation_platforms__platform_id__guidance_flows_from_agent_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AgentFlow"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    trigger_guidance_flow_load_automation_platforms__platform_id__guidance_flows_agent_start_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TriggerGuidanceFlowLoad"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_onboarding_flows_automation_platforms__platform_id__onboarding_flows_get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetOnboardingFlowsResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_onboarding_flow_automation_platforms__platform_id__onboarding_flows_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OnboardingFlowCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateOnboardingFlowUsingGuidanceFlowResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_onboarding_flow_automation_platforms__platform_id__onboarding_flows__onboarding_flow_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                onboarding_flow_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_onboarding_flow_automation_platforms__platform_id__onboarding_flows__onboarding_flow_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                onboarding_flow_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OnboardingFlowUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateOnboardingFlowResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_onboarding_plans_automation_platforms__platform_id__onboarding_plans_get: {
        parameters: {
            query?: {
                limit?: number | null;
                offset?: number | null;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetOnboardingPlansResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_onboarding_plan_automation_platforms__platform_id__onboarding_plans_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OnboardingPlanCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateOnboardingPlanResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_onboarding_plan_automation_platforms__platform_id__onboarding_plans__onboarding_plan_id__get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                onboarding_plan_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetOnboardingPlanResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_onboarding_plan_automation_platforms__platform_id__onboarding_plans__onboarding_plan_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                onboarding_plan_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_onboarding_plan_automation_platforms__platform_id__onboarding_plans__plan_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                plan_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OnboardingPlanUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateOnboardingPlanResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_onboarding_plan_from_template_for_platform_user_automation_platforms__platform_id__onboarding_plans_from_template_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OnboardingPlanFromTemplateCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateOnboardingPlanResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    filter_queries_automation_platforms__platform_id__queries_get: {
        parameters: {
            query?: {
                type?: string | null;
                status?: string | null;
                user_id?: string | null;
                group_id?: string | null;
                limit?: number | null;
                offset?: number | null;
                query?: string | null;
                flow_id?: string | null;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetQueriesResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_top_queries_automation_platforms__platform_id__queries_top_get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetTopThreeQueriesByPlatformResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_query_stats_automation_platforms__platform_id__queries_stats_get: {
        parameters: {
            query?: {
                start_date_days_ago?: number;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetQueryStatsResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_query_automation_platforms__platform_id__queries__id__get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetQueryByIdResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_query_automation_platforms__platform_id__queries__id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_template_announcements_automation_platforms__platform_id__template_announcements_get: {
        parameters: {
            query?: {
                start_date_days_ago?: number;
                limit?: number | null;
                offset?: number | null;
                include_stats?: boolean;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetTemplateAnnouncementsWithStatsResult"][] | components["schemas"]["GetTemplateAnnouncementsByPlatformIdResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_template_announcement_automation_platforms__platform_id__template_announcements_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TemplateAnnouncementCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateTemplateAnnouncementResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_template_announcement_automation_platforms__platform_id__template_announcements__template_announcement_id__get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                template_announcement_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetTemplateAnnouncementResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_template_announcement_automation_platforms__platform_id__template_announcements__template_announcement_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                template_announcement_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_template_announcement_automation_platforms__platform_id__template_announcements__template_announcement_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                template_announcement_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TemplateAnnouncementUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateTemplateAnnouncementResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_template_announcement_stage_automation_platforms__platform_id__template_announcements__template_announcement_id__stage_patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
                template_announcement_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TemplateAnnouncementStageUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_template_onboarding_plans_automation_platforms__platform_id__template_onboarding_plans_get: {
        parameters: {
            query?: {
                limit?: number | null;
                offset?: number | null;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetTemplateOnboardingPlansResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_template_onboarding_plan_automation_platforms__platform_id__template_onboarding_plans_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_create_template_onboarding_plan_automation_platforms__platform_id__template_onboarding_plans_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateTemplateOnboardingPlanResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_template_onboarding_plan_automation_platforms__platform_id__template_onboarding_plans__plan_id__get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
                plan_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetTemplateOnboardingPlanResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_template_onboarding_plan_automation_platforms__platform_id__template_onboarding_plans__plan_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
                plan_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_template_onboarding_plan_automation_platforms__platform_id__template_onboarding_plans__plan_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
                plan_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TemplateOnboardingPlanUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateTemplateOnboardingPlanResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_template_onboarding_plan_stage_automation_platforms__platform_id__template_onboarding_plans__plan_id__stage_patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
                plan_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TemplateOnboardingPlanStageUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_template_onboarding_flows_automation_platforms__platform_id__template_onboarding_flows_get: {
        parameters: {
            query?: {
                include_stats?: boolean;
                start_date_days_ago?: number;
                limit?: number | null;
                offset?: number | null;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetTemplateOnboardingFlowsResult"][] | components["schemas"]["GetTemplateOnboardingFlowsWithStatsResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_template_onboarding_flow_automation_platforms__platform_id__template_onboarding_flows_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TemplateOnboardingFlowCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateTemplateOnboardingFlowUsingGuidanceFlowResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_template_onboarding_flow_automation_platforms__platform_id__template_onboarding_flows__flow_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                flow_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_template_onboarding_flow_automation_platforms__platform_id__template_onboarding_flows__flow_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
                flow_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TemplateOnboardingFlowUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateTemplateOnboardingFlowResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_theme_automation_platforms__platform_id__theme_get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetThemeByPlatformResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_theme_automation_platforms__platform_id__theme_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ThemeCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateThemeResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_theme_automation_platforms__platform_id__theme__theme_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                theme_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ThemeUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateThemeResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_audience_automation_platforms__platform_id__audience_get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetAudiencesByPlatformIdResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_audience_automation_platforms__platform_id__audience_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AudienceCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateAudienceResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_audience_automation_platforms__platform_id__audience__audience_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                audience_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeleteAudienceResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_audience_automation_platforms__platform_id__audience__audience_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                audience_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AudienceUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateAudienceResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_knowledge_sources_automation_platforms__platform_id__knowledge_get: {
        parameters: {
            query?: {
                limit?: number | null;
                offset?: number | null;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_knowledge_source_automation_platforms__platform_id__knowledge_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddKnowledgeSource"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_urls_automation_platforms__platform_id__knowledge_url_list_get: {
        parameters: {
            query: {
                url: string;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    query_knowledge_source_automation_platforms__platform_id__knowledge_query_get: {
        parameters: {
            query: {
                query: string;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_knowledge_source_automation_platforms__platform_id__knowledge__source_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
                source_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    retry_knowledge_source_automation_platforms__platform_id__knowledge__source_id__retry_put: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
                source_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_knowledge_source_automation_platforms__platform_id__knowledge__knowledge_source_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                knowledge_source_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateKnowledgeSource"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdatePlatformContextResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    bulk_update_knowledge_source_automation_platforms__platform_id__knowledge_bulk_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BulkUpdateKnowledgeSource"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BulkUpdatePlatformKnowledgeResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_subscription_plans_automation_platforms__platform_id__subscription_plans_get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetSubscriptionPlansByPlatformIdResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_subscription_plan_automation_platforms__platform_id__subscription_plans_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SubscriptionPlanCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateSubscriptionPlanResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_subscription_plan_automation_platforms__platform_id__subscription_plans__plan_id__get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                plan_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetSubscriptionPlanByIdResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_subscription_plan_automation_platforms__platform_id__subscription_plans__plan_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                plan_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeleteSubscriptionPlanResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_subscription_plan_automation_platforms__platform_id__subscription_plans__plan_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                plan_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SubscriptionPlanUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateSubscriptionPlanResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_roles_automation_platforms__platform_id__roles_get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetRolesByPlatformIdResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_role_automation_platforms__platform_id__roles_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateRoleResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_role_automation_platforms__platform_id__roles__role_id__get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                role_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetRoleByIdResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_role_automation_platforms__platform_id__roles__role_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                role_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeleteRoleResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_role_automation_platforms__platform_id__roles__role_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                role_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateRoleResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_credentials_automation_platforms__platform_id__credentials_get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetPlatformCredentialsByPlatformIdResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_platform_credentials_automation_platforms__platform_id__credentials_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlatformCredentialsCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreatePlatformCredentialsResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_platform_credentials_automation_platforms__platform_id__credentials__credentials_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                credentials_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeletePlatformCredentialsResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_platform_credentials_automation_platforms__platform_id__credentials__credentials_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                credentials_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlatformCredentialsUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdatePlatformCredentialsResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_credentials_automation_platforms__platform_id__credentials__credential_id__get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                credential_id: string;
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetPlatformCredentialsByIdResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_platforms_automation_platforms_get: {
        parameters: {
            query?: {
                limit?: number | null;
                offset?: number | null;
                include_data?: boolean | null;
            };
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetPlatformsResult"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_platform_automation_platforms_post: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlatformCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreatePlatformResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_platform_automation_platforms__platform_id__get: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetPlatformByIdResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_platform_automation_platforms__platform_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    partial_update_platform_automation_platforms__platform_id__patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["handlers__automation__platform__PlatformUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdatePlatformResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    toggle_platform_visibility_automation_platforms__platform_id__toggle_visibility_patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TogglePlatformVisibility"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TogglePlatformVisibilityResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_user_whitelist_automation_platforms__platform_id__user_whitelist_patch: {
        parameters: {
            query?: never;
            header?: {
                "x-api-token"?: string | null;
            };
            path: {
                platform_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["handlers__automation__platform__PlatformUserWhitelistUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateUserWhitelistResult"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    health_check_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    delete_flow_points_vector_delete_delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    serve_asyncapi_schema_asyncapi_get: {
        parameters: {
            query?: {
                sidebar?: boolean;
                info?: boolean;
                servers?: boolean;
                operations?: boolean;
                messages?: boolean;
                schemas?: boolean;
                errors?: boolean;
                expandMessageExamples?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    download_app_json_schema_asyncapi_json_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    download_app_yaml_schema_asyncapi_yaml_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
