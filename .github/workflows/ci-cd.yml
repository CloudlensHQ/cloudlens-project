# .github/workflows/ci-cd.yml
name: CloudLens CI/CD

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  # Build and validate Docker images
  build:
    runs-on: ubuntu-latest
    name: Build & Validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./fastapi-backend
        push: false
        tags: cloudlens/backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: false
        tags: cloudlens/frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Validate Docker Compose
      run: |
        cp env.example .env
        docker-compose config
        echo "âœ… Docker Compose configuration is valid"

  # Security Scanning
  security:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'repo'
        scan-ref: '.'
        format: 'table'

  # Deploy to staging (only on master)
  deploy-staging:
    runs-on: ubuntu-latest
    name: Deploy to Staging
    needs: [build, security]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend to staging
      uses: docker/build-push-action@v5
      with:
        context: ./fastapi-backend
        push: true
        tags: |
          cloudlens/backend:staging
          cloudlens/backend:staging-${{ github.sha }}

    - name: Build and push frontend to staging
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          cloudlens/frontend:staging
          cloudlens/frontend:staging-${{ github.sha }}

    - name: Deploy notification
      run: |
        echo "ðŸš€ Deployed to staging!"
        echo "Backend: cloudlens/backend:staging-${{ github.sha }}"
        echo "Frontend: cloudlens/frontend:staging-${{ github.sha }}"

  # Deploy to production (manual trigger)
  deploy-production:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: [build, security]
    if: github.ref == 'refs/heads/master'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend to production
      uses: docker/build-push-action@v5
      with:
        context: ./fastapi-backend
        push: true
        tags: |
          cloudlens/backend:latest
          cloudlens/backend:prod-${{ github.sha }}

    - name: Build and push frontend to production
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          cloudlens/frontend:latest
          cloudlens/frontend:prod-${{ github.sha }}

    - name: Production deployment notification
      run: |
        echo "ðŸŽ‰ Deployed to production!"
        echo "Backend: cloudlens/backend:prod-${{ github.sha }}"
        echo "Frontend: cloudlens/frontend:prod-${{ github.sha }}"